apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-app
  labels:
    app: nodejs-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      containers:
      - name: nodejs-app
        image: node:18-alpine
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        env:
        - name: MONGODB_URI
          value: "mongodb://mongodb:27017/nodeapp"
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo '
          const express = require("express");
          const mongoose = require("mongoose");
          const app = express();
          const port = process.env.PORT || 3000;
          
          // Connect to MongoDB
          mongoose
            .connect(process.env.MONGODB_URI)
            .then(() => console.log("Connected to MongoDB"))
            .catch(err => console.error("Could not connect to MongoDB", err));
          
          app.use(express.json());
          
          // Routes
          app.get("/", (req, res) => {
            res.json({ message: "Welcome to Node.js app" });
          });
          
          app.get("/health", (req, res) => {
            res.json({ status: "healthy" });
          });
          
          // Start server
          app.listen(port, () => {
            console.log(`Server running on port ${port}`);
          });
          ' > index.js
          npm init -y
          npm install express mongoose
          node server.js
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-app-service
spec:
  selector:
    app: nodejs-app
  type: NodePort
  ports:
  - port: 80
    targetPort: 3000
    nodePort: 30080