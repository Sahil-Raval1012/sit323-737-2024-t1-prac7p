
==> Audit <==
|------------|------------------------------|----------|--------------|---------|----------------------|----------------------|
|  Command   |             Args             | Profile  |     User     | Version |      Start Time      |       End Time       |
|------------|------------------------------|----------|--------------|---------|----------------------|----------------------|
| start      | --driver=docker              | minikube | prakashraval | v1.35.0 | 17 Apr 25 16:52 AEST |                      |
| start      |                              | minikube | prakashraval | v1.35.0 | 17 Apr 25 16:53 AEST |                      |
| start      | --driver=docker              | minikube | prakashraval | v1.35.0 | 17 Apr 25 16:55 AEST |                      |
| start      | --driver=docker              | minikube | prakashraval | v1.35.0 | 17 Apr 25 16:58 AEST | 17 Apr 25 17:00 AEST |
| start      | --driver=docker              | minikube | prakashraval | v1.35.0 | 17 Apr 25 16:59 AEST |                      |
| docker-env |                              | minikube | prakashraval | v1.35.0 | 17 Apr 25 17:01 AEST | 17 Apr 25 17:01 AEST |
| service    | calculator-app-service --url | minikube | prakashraval | v1.35.0 | 17 Apr 25 17:03 AEST |                      |
| service    | calculator-app-service --url | minikube | prakashraval | v1.35.0 | 17 Apr 25 17:05 AEST |                      |
| docker-env |                              | minikube | prakashraval | v1.35.0 | 17 Apr 25 17:07 AEST | 17 Apr 25 17:07 AEST |
| service    | calculator-app-service --url | minikube | prakashraval | v1.35.0 | 17 Apr 25 17:09 AEST |                      |
| service    | calculator-app-service --url | minikube | prakashraval | v1.35.0 | 17 Apr 25 17:10 AEST |                      |
| service    | calculator-app-service --url | minikube | prakashraval | v1.35.0 | 17 Apr 25 20:47 AEST |                      |
| service    | calculator-app-service --url | minikube | prakashraval | v1.35.0 | 17 Apr 25 21:34 AEST |                      |
| docker-env |                              | minikube | prakashraval | v1.35.0 | 17 Apr 25 21:36 AEST | 17 Apr 25 21:36 AEST |
| service    | calculator-app-service --url | minikube | prakashraval | v1.35.0 | 17 Apr 25 21:36 AEST |                      |
|------------|------------------------------|----------|--------------|---------|----------------------|----------------------|


==> Last Start <==
Log file created at: 2025/04/17 16:59:19
Running on machine: Sahils-MBP
Binary: Built with gc go1.23.4 for darwin/arm64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0417 16:59:19.617592    7925 out.go:345] Setting OutFile to fd 1 ...
I0417 16:59:19.617720    7925 out.go:397] isatty.IsTerminal(1) = true
I0417 16:59:19.617723    7925 out.go:358] Setting ErrFile to fd 2...
I0417 16:59:19.617725    7925 out.go:397] isatty.IsTerminal(2) = true
I0417 16:59:19.617824    7925 root.go:338] Updating PATH: /Users/prakashraval/.minikube/bin
W0417 16:59:19.617887    7925 root.go:314] Error reading config file at /Users/prakashraval/.minikube/config/config.json: open /Users/prakashraval/.minikube/config/config.json: no such file or directory
I0417 16:59:19.618205    7925 out.go:352] Setting JSON to false
I0417 16:59:19.644318    7925 start.go:129] hostinfo: {"hostname":"Sahils-MBP","uptime":31026,"bootTime":1744842133,"procs":546,"os":"darwin","platform":"darwin","platformFamily":"Standalone Workstation","platformVersion":"14.1","kernelVersion":"23.1.0","kernelArch":"arm64","virtualizationSystem":"","virtualizationRole":"","hostId":"97d5149a-0dfe-56e0-9c9a-15073d020ede"}
W0417 16:59:19.644606    7925 start.go:137] gopshost.Virtualization returned error: not implemented yet
I0417 16:59:19.648487    7925 out.go:177] 😄  minikube v1.35.0 on Darwin 14.1 (arm64)
I0417 16:59:19.656678    7925 notify.go:220] Checking for updates...
I0417 16:59:19.656897    7925 driver.go:394] Setting default libvirt URI to qemu:///system
I0417 16:59:19.680976    7925 docker.go:123] docker version: linux-28.0.1:Docker Desktop 4.39.0 (184744)
I0417 16:59:19.681152    7925 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0417 16:59:19.959379    7925 info.go:266] docker info: {ID:13ad62c6-f38b-4e3b-b08a-be5277431ad4 Containers:22 ContainersRunning:6 ContainersPaused:0 ContainersStopped:16 Images:13 Driver:overlayfs DriverStatus:[[driver-type io.containerd.snapshotter.v1]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:130 OomKillDisable:false NGoroutines:146 SystemTime:2025-04-17 06:59:19.949805422 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:18 KernelVersion:6.10.14-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[::1/128 127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:11 MemTotal:8217890816 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=unix:///Users/prakashraval/Library/Containers/com.docker.docker/Data/docker-cli.sock] ExperimentalBuild:false ServerVersion:28.0.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb Expected:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb} RuncCommit:{ID:v1.2.4-0-g6c52b3f Expected:v1.2.4-0-g6c52b3f} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/Users/prakashraval/.docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.21.1-desktop.2] map[Name:compose Path:/Users/prakashraval/.docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.33.1-desktop.1] map[Name:debug Path:/Users/prakashraval/.docker/cli-plugins/docker-debug SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.38] map[Name:desktop Path:/Users/prakashraval/.docker/cli-plugins/docker-desktop SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands (Beta) Vendor:Docker Inc. Version:v0.1.5] map[Name:dev Path:/Users/prakashraval/.docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:/Users/prakashraval/.docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.27] map[Name:feedback Path:/Users/prakashraval/.docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.5] map[Name:init Path:/Users/prakashraval/.docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.4.0] map[Name:sbom Path:/Users/prakashraval/.docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:/Users/prakashraval/.docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.16.3]] Warnings:<nil>}}
I0417 16:59:19.962412    7925 out.go:177] ✨  Using the docker driver based on user configuration
I0417 16:59:19.967024    7925 start.go:297] selected driver: docker
I0417 16:59:19.967032    7925 start.go:901] validating driver "docker" against <nil>
I0417 16:59:19.967041    7925 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0417 16:59:19.967212    7925 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0417 16:59:20.046223    7925 info.go:266] docker info: {ID:13ad62c6-f38b-4e3b-b08a-be5277431ad4 Containers:22 ContainersRunning:6 ContainersPaused:0 ContainersStopped:16 Images:13 Driver:overlayfs DriverStatus:[[driver-type io.containerd.snapshotter.v1]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:130 OomKillDisable:false NGoroutines:146 SystemTime:2025-04-17 06:59:20.04032538 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:18 KernelVersion:6.10.14-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[::1/128 127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:11 MemTotal:8217890816 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=unix:///Users/prakashraval/Library/Containers/com.docker.docker/Data/docker-cli.sock] ExperimentalBuild:false ServerVersion:28.0.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb Expected:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb} RuncCommit:{ID:v1.2.4-0-g6c52b3f Expected:v1.2.4-0-g6c52b3f} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/Users/prakashraval/.docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.21.1-desktop.2] map[Name:compose Path:/Users/prakashraval/.docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.33.1-desktop.1] map[Name:debug Path:/Users/prakashraval/.docker/cli-plugins/docker-debug SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.38] map[Name:desktop Path:/Users/prakashraval/.docker/cli-plugins/docker-desktop SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands (Beta) Vendor:Docker Inc. Version:v0.1.5] map[Name:dev Path:/Users/prakashraval/.docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:/Users/prakashraval/.docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.27] map[Name:feedback Path:/Users/prakashraval/.docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.5] map[Name:init Path:/Users/prakashraval/.docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.4.0] map[Name:sbom Path:/Users/prakashraval/.docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:/Users/prakashraval/.docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.16.3]] Warnings:<nil>}}
I0417 16:59:20.046418    7925 start_flags.go:310] no existing cluster config was found, will generate one from the flags 
I0417 16:59:20.049388    7925 start_flags.go:393] Using suggested 4600MB memory alloc based on sys=18432MB, container=7837MB
I0417 16:59:20.049501    7925 start_flags.go:929] Wait components to verify : map[apiserver:true system_pods:true]
I0417 16:59:20.053433    7925 out.go:177] 📌  Using Docker Desktop driver with root privileges
I0417 16:59:20.055157    7925 cni.go:84] Creating CNI manager for ""
I0417 16:59:20.055191    7925 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0417 16:59:20.055203    7925 start_flags.go:319] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0417 16:59:20.055255    7925 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:4600 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0417 16:59:20.060439    7925 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I0417 16:59:20.063492    7925 cache.go:121] Beginning downloading kic base image for docker with docker
I0417 16:59:20.066544    7925 out.go:177] 🚜  Pulling base image v0.0.46 ...
I0417 16:59:20.072582    7925 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0417 16:59:20.072605    7925 image.go:81] Checking for gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local docker daemon
I0417 16:59:20.144188    7925 cache.go:150] Downloading gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 to local cache
I0417 16:59:20.251637    7925 out.go:235] ⌛  Another minikube instance is downloading dependencies... 
I0417 16:59:20.938176    7925 preload.go:118] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.32.0/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-arm64.tar.lz4
I0417 16:59:20.938213    7925 cache.go:56] Caching tarball of preloaded images
I0417 16:59:21.045362    7925 out.go:235] ⌛  Another minikube instance is downloading dependencies... 
I0417 16:59:38.717741    7925 image.go:65] Checking for gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local cache directory
I0417 16:59:38.717873    7925 image.go:68] Found gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local cache directory, skipping pull
I0417 16:59:38.717885    7925 image.go:137] gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 exists in cache, skipping pull
I0417 16:59:38.717910    7925 cache.go:153] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 as a tarball
I0417 16:59:38.717916    7925 cache.go:163] Loading gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 from local cache
I0417 16:59:38.717539    7783 cache.go:153] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 as a tarball
I0417 16:59:38.717565    7783 cache.go:163] Loading gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 from local cache
I0417 16:59:51.156639    7925 cache.go:165] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 from cached tarball
I0417 16:59:51.198354    7783 cache.go:165] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 from cached tarball
I0417 16:59:55.067806    7783 preload.go:247] saving checksum for preloaded-images-k8s-v18-v1.32.0-docker-overlay2-arm64.tar.lz4 ...
I0417 16:59:55.068006    7783 preload.go:254] verifying checksum of /Users/prakashraval/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-arm64.tar.lz4 ...
I0417 16:59:55.789178    7783 cache.go:59] Finished verifying existence of preloaded tar for v1.32.0 on docker
I0417 16:59:55.789496    7783 profile.go:143] Saving config to /Users/prakashraval/.minikube/profiles/minikube/config.json ...
I0417 16:59:55.789530    7783 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/profiles/minikube/config.json: {Name:mk34d877c11a19decb905ba31b9d12e6f63f3a4e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 16:59:55.789888    7783 cache.go:227] Successfully downloaded all kic artifacts
I0417 16:59:55.791293    7783 start.go:360] acquireMachinesLock for minikube: {Name:mkcb6905dcf3ebb5589b5414822c277b4f236a2d Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0417 16:59:55.791368    7783 start.go:364] duration metric: took 70.334µs to acquireMachinesLock for "minikube"
I0417 16:59:55.791529    7783 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:4600 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0417 16:59:55.791570    7783 start.go:125] createHost starting for "" (driver="docker")
I0417 16:59:55.790389    7925 preload.go:172] Found /Users/prakashraval/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-arm64.tar.lz4 in cache, skipping download
I0417 16:59:55.790432    7925 cache.go:59] Finished verifying existence of preloaded tar for v1.32.0 on docker
I0417 16:59:55.791576    7925 profile.go:143] Saving config to /Users/prakashraval/.minikube/profiles/minikube/config.json ...
I0417 16:59:55.802359    7925 cache.go:227] Successfully downloaded all kic artifacts
I0417 16:59:55.802446    7925 start.go:360] acquireMachinesLock for minikube: {Name:mkcb6905dcf3ebb5589b5414822c277b4f236a2d Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0417 16:59:55.796705    7783 out.go:235] 🔥  Creating docker container (CPUs=2, Memory=4600MB) ...
I0417 16:59:55.796865    7783 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0417 16:59:55.797151    7783 client.go:168] LocalClient.Create starting
I0417 16:59:55.798065    7783 main.go:141] libmachine: Creating CA: /Users/prakashraval/.minikube/certs/ca.pem
I0417 16:59:55.900734    7783 main.go:141] libmachine: Creating client certificate: /Users/prakashraval/.minikube/certs/cert.pem
I0417 16:59:56.023383    7783 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0417 16:59:56.042353    7783 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0417 16:59:56.042763    7783 network_create.go:284] running [docker network inspect minikube] to gather additional debugging logs...
I0417 16:59:56.042778    7783 cli_runner.go:164] Run: docker network inspect minikube
W0417 16:59:56.058489    7783 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0417 16:59:56.058510    7783 network_create.go:287] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0417 16:59:56.058528    7783 network_create.go:289] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0417 16:59:56.058683    7783 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0417 16:59:56.076916    7783 network.go:206] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0x14001bce000}
I0417 16:59:56.076977    7783 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 65535 ...
I0417 16:59:56.077092    7783 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=65535 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0417 16:59:56.124031    7783 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0417 16:59:56.124110    7783 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0417 16:59:56.124422    7783 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0417 16:59:56.192201    7783 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0417 16:59:56.208994    7783 oci.go:103] Successfully created a docker volume minikube
I0417 16:59:56.209145    7783 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib
I0417 16:59:56.493797    7783 oci.go:107] Successfully prepared a docker volume minikube
I0417 16:59:56.493848    7783 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0417 16:59:56.493868    7783 kic.go:194] Starting extracting preloaded images to volume ...
I0417 16:59:56.494049    7783 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /Users/prakashraval/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-arm64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -I lz4 -xf /preloaded.tar -C /extractDir
I0417 16:59:58.511486    7783 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /Users/prakashraval/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-arm64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -I lz4 -xf /preloaded.tar -C /extractDir: (2.017290125s)
I0417 16:59:58.511558    7783 kic.go:203] duration metric: took 2.017668334s to extract preloaded images to volume ...
I0417 16:59:58.511901    7783 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0417 16:59:58.802983    7783 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=4600mb --memory-swap=4600mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279
I0417 16:59:58.987910    7783 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0417 16:59:59.009202    7783 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0417 16:59:59.026584    7783 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0417 16:59:59.082183    7783 oci.go:144] the created container "minikube" has a running status.
I0417 16:59:59.082215    7783 kic.go:225] Creating ssh key for kic: /Users/prakashraval/.minikube/machines/minikube/id_rsa...
I0417 16:59:59.162663    7783 kic_runner.go:191] docker (temp): /Users/prakashraval/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0417 16:59:59.186970    7783 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0417 16:59:59.206155    7783 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0417 16:59:59.206169    7783 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0417 16:59:59.250982    7783 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0417 16:59:59.268414    7783 machine.go:93] provisionDockerMachine start ...
I0417 16:59:59.268568    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 16:59:59.285476    7783 main.go:141] libmachine: Using SSH client type: native
I0417 16:59:59.285695    7783 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x100fac680] 0x100faeec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 16:59:59.285701    7783 main.go:141] libmachine: About to run SSH command:
hostname
I0417 16:59:59.392199    7783 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0417 16:59:59.392221    7783 ubuntu.go:169] provisioning hostname "minikube"
I0417 16:59:59.392557    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 16:59:59.408823    7783 main.go:141] libmachine: Using SSH client type: native
I0417 16:59:59.408993    7783 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x100fac680] 0x100faeec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 16:59:59.409000    7783 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0417 16:59:59.520115    7783 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0417 16:59:59.520254    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 16:59:59.538167    7783 main.go:141] libmachine: Using SSH client type: native
I0417 16:59:59.538340    7783 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x100fac680] 0x100faeec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 16:59:59.538347    7783 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0417 16:59:59.647443    7783 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0417 16:59:59.647504    7783 ubuntu.go:175] set auth options {CertDir:/Users/prakashraval/.minikube CaCertPath:/Users/prakashraval/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/prakashraval/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/prakashraval/.minikube/machines/server.pem ServerKeyPath:/Users/prakashraval/.minikube/machines/server-key.pem ClientKeyPath:/Users/prakashraval/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/prakashraval/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/prakashraval/.minikube}
I0417 16:59:59.647579    7783 ubuntu.go:177] setting up certificates
I0417 16:59:59.647590    7783 provision.go:84] configureAuth start
I0417 16:59:59.647720    7783 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0417 16:59:59.673567    7783 provision.go:143] copyHostCerts
I0417 16:59:59.673694    7783 exec_runner.go:151] cp: /Users/prakashraval/.minikube/certs/cert.pem --> /Users/prakashraval/.minikube/cert.pem (1139 bytes)
I0417 16:59:59.674145    7783 exec_runner.go:151] cp: /Users/prakashraval/.minikube/certs/key.pem --> /Users/prakashraval/.minikube/key.pem (1675 bytes)
I0417 16:59:59.674540    7783 exec_runner.go:151] cp: /Users/prakashraval/.minikube/certs/ca.pem --> /Users/prakashraval/.minikube/ca.pem (1094 bytes)
I0417 16:59:59.674724    7783 provision.go:117] generating server cert: /Users/prakashraval/.minikube/machines/server.pem ca-key=/Users/prakashraval/.minikube/certs/ca.pem private-key=/Users/prakashraval/.minikube/certs/ca-key.pem org=prakashraval.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0417 17:00:00.017106    7783 provision.go:177] copyRemoteCerts
I0417 17:00:00.018472    7783 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0417 17:00:00.018529    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:00.036750    7783 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:00.134236    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1094 bytes)
I0417 17:00:00.155657    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/machines/server.pem --> /etc/docker/server.pem (1196 bytes)
I0417 17:00:00.170411    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0417 17:00:00.183398    7783 provision.go:87] duration metric: took 533.958208ms to configureAuth
I0417 17:00:00.183411    7783 ubuntu.go:193] setting minikube options for container-runtime
I0417 17:00:00.183712    7783 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.32.0
I0417 17:00:00.183790    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:00.200519    7783 main.go:141] libmachine: Using SSH client type: native
I0417 17:00:00.201521    7783 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x100fac680] 0x100faeec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 17:00:00.201531    7783 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0417 17:00:00.312846    7783 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0417 17:00:00.312863    7783 ubuntu.go:71] root file system type: overlay
I0417 17:00:00.313006    7783 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0417 17:00:00.313173    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:00.337433    7783 main.go:141] libmachine: Using SSH client type: native
I0417 17:00:00.339177    7783 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x100fac680] 0x100faeec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 17:00:00.339241    7783 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0417 17:00:00.462313    7783 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0417 17:00:00.462527    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:00.486761    7783 main.go:141] libmachine: Using SSH client type: native
I0417 17:00:00.487488    7783 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x100fac680] 0x100faeec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 17:00:00.487497    7783 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0417 17:00:01.731497    7925 start.go:364] duration metric: took 5.928928083s to acquireMachinesLock for "minikube"
I0417 17:00:01.731572    7925 start.go:96] Skipping create...Using existing machine configuration
I0417 17:00:01.731577    7925 fix.go:54] fixHost starting: 
I0417 17:00:01.732194    7925 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0417 17:00:01.756323    7925 fix.go:112] recreateIfNeeded on minikube: state=Running err=<nil>
W0417 17:00:01.756363    7925 fix.go:138] unexpected machine state, will restart: <nil>
I0417 17:00:01.760101    7925 out.go:177] 🏃  Updating the running docker "minikube" container ...
I0417 17:00:01.770133    7925 machine.go:93] provisionDockerMachine start ...
I0417 17:00:01.770324    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:01.793645    7925 main.go:141] libmachine: Using SSH client type: native
I0417 17:00:01.793977    7925 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x1013a8680] 0x1013aaec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 17:00:01.793985    7925 main.go:141] libmachine: About to run SSH command:
hostname
I0417 17:00:01.902334    7925 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0417 17:00:01.902385    7925 ubuntu.go:169] provisioning hostname "minikube"
I0417 17:00:01.902536    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:01.931128    7925 main.go:141] libmachine: Using SSH client type: native
I0417 17:00:01.931390    7925 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x1013a8680] 0x1013aaec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 17:00:01.931397    7925 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0417 17:00:02.050534    7925 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0417 17:00:02.050714    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:02.082559    7925 main.go:141] libmachine: Using SSH client type: native
I0417 17:00:02.082868    7925 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x1013a8680] 0x1013aaec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 17:00:02.082888    7925 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0417 17:00:02.190088    7925 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0417 17:00:02.190109    7925 ubuntu.go:175] set auth options {CertDir:/Users/prakashraval/.minikube CaCertPath:/Users/prakashraval/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/prakashraval/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/prakashraval/.minikube/machines/server.pem ServerKeyPath:/Users/prakashraval/.minikube/machines/server-key.pem ClientKeyPath:/Users/prakashraval/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/prakashraval/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/prakashraval/.minikube}
I0417 17:00:02.190134    7925 ubuntu.go:177] setting up certificates
I0417 17:00:02.190141    7925 provision.go:84] configureAuth start
I0417 17:00:02.190261    7925 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0417 17:00:02.219293    7925 provision.go:143] copyHostCerts
I0417 17:00:02.219503    7925 exec_runner.go:144] found /Users/prakashraval/.minikube/key.pem, removing ...
I0417 17:00:02.219519    7925 exec_runner.go:203] rm: /Users/prakashraval/.minikube/key.pem
I0417 17:00:02.219710    7925 exec_runner.go:151] cp: /Users/prakashraval/.minikube/certs/key.pem --> /Users/prakashraval/.minikube/key.pem (1675 bytes)
I0417 17:00:02.220405    7925 exec_runner.go:144] found /Users/prakashraval/.minikube/ca.pem, removing ...
I0417 17:00:02.220414    7925 exec_runner.go:203] rm: /Users/prakashraval/.minikube/ca.pem
I0417 17:00:02.220540    7925 exec_runner.go:151] cp: /Users/prakashraval/.minikube/certs/ca.pem --> /Users/prakashraval/.minikube/ca.pem (1094 bytes)
I0417 17:00:02.220991    7925 exec_runner.go:144] found /Users/prakashraval/.minikube/cert.pem, removing ...
I0417 17:00:02.220999    7925 exec_runner.go:203] rm: /Users/prakashraval/.minikube/cert.pem
I0417 17:00:02.221490    7925 exec_runner.go:151] cp: /Users/prakashraval/.minikube/certs/cert.pem --> /Users/prakashraval/.minikube/cert.pem (1139 bytes)
I0417 17:00:02.221962    7925 provision.go:117] generating server cert: /Users/prakashraval/.minikube/machines/server.pem ca-key=/Users/prakashraval/.minikube/certs/ca.pem private-key=/Users/prakashraval/.minikube/certs/ca-key.pem org=prakashraval.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0417 17:00:02.349520    7925 provision.go:177] copyRemoteCerts
I0417 17:00:02.349619    7925 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0417 17:00:02.349675    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:02.366410    7925 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:02.443342    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1094 bytes)
I0417 17:00:02.454980    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/machines/server.pem --> /etc/docker/server.pem (1196 bytes)
I0417 17:00:02.468356    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0417 17:00:02.480693    7925 provision.go:87] duration metric: took 290.538292ms to configureAuth
I0417 17:00:02.480709    7925 ubuntu.go:193] setting minikube options for container-runtime
I0417 17:00:02.480877    7925 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.32.0
I0417 17:00:02.480977    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:02.497402    7925 main.go:141] libmachine: Using SSH client type: native
I0417 17:00:02.497551    7925 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x1013a8680] 0x1013aaec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 17:00:02.497555    7925 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0417 17:00:02.603325    7925 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0417 17:00:02.603349    7925 ubuntu.go:71] root file system type: overlay
I0417 17:00:02.603521    7925 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0417 17:00:02.603650    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:02.630735    7925 main.go:141] libmachine: Using SSH client type: native
I0417 17:00:02.630904    7925 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x1013a8680] 0x1013aaec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 17:00:02.630941    7925 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0417 17:00:02.740506    7925 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0417 17:00:02.740664    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:02.769593    7925 main.go:141] libmachine: Using SSH client type: native
I0417 17:00:02.769754    7925 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x1013a8680] 0x1013aaec0 <nil>  [] 0s} 127.0.0.1 50305 <nil> <nil>}
I0417 17:00:02.769765    7925 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0417 17:00:02.880377    7925 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0417 17:00:02.880398    7925 machine.go:96] duration metric: took 1.110246959s to provisionDockerMachine
I0417 17:00:02.880417    7925 start.go:293] postStartSetup for "minikube" (driver="docker")
I0417 17:00:02.880431    7925 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0417 17:00:02.880643    7925 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0417 17:00:02.880795    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:02.910753    7925 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:02.990958    7925 ssh_runner.go:195] Run: cat /etc/os-release
I0417 17:00:02.992968    7925 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0417 17:00:02.992988    7925 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0417 17:00:02.992994    7925 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0417 17:00:02.992999    7925 info.go:137] Remote host: Ubuntu 22.04.5 LTS
I0417 17:00:02.993006    7925 filesync.go:126] Scanning /Users/prakashraval/.minikube/addons for local assets ...
I0417 17:00:02.993158    7925 filesync.go:126] Scanning /Users/prakashraval/.minikube/files for local assets ...
I0417 17:00:02.993197    7925 start.go:296] duration metric: took 112.7735ms for postStartSetup
I0417 17:00:02.993295    7925 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0417 17:00:02.993392    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:03.021878    7925 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:03.099857    7925 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0417 17:00:03.102209    7925 fix.go:56] duration metric: took 1.370608209s for fixHost
I0417 17:00:03.102247    7925 start.go:83] releasing machines lock for "minikube", held for 1.370712625s
I0417 17:00:03.102386    7925 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0417 17:00:03.133390    7925 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0417 17:00:03.133390    7925 ssh_runner.go:195] Run: cat /version.json
I0417 17:00:03.133503    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:03.133504    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:03.152998    7925 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:03.153092    7925 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:03.451558    7925 ssh_runner.go:195] Run: systemctl --version
I0417 17:00:03.454693    7925 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0417 17:00:03.457380    7925 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0417 17:00:03.467319    7925 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0417 17:00:03.467429    7925 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0417 17:00:03.473103    7925 cni.go:259] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0417 17:00:03.473115    7925 start.go:495] detecting cgroup driver to use...
I0417 17:00:03.473130    7925 detect.go:187] detected "cgroupfs" cgroup driver on host os
I0417 17:00:03.473263    7925 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0417 17:00:03.482318    7925 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.10"|' /etc/containerd/config.toml"
I0417 17:00:03.487348    7925 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0417 17:00:03.491833    7925 containerd.go:146] configuring containerd to use "cgroupfs" as cgroup driver...
I0417 17:00:03.491929    7925 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0417 17:00:03.496574    7925 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0417 17:00:03.501035    7925 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0417 17:00:03.505483    7925 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0417 17:00:03.510104    7925 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0417 17:00:03.514522    7925 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0417 17:00:03.519474    7925 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0417 17:00:03.525019    7925 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0417 17:00:03.531487    7925 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0417 17:00:03.536167    7925 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0417 17:00:03.540511    7925 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0417 17:00:03.578903    7925 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0417 17:00:03.629235    7925 start.go:495] detecting cgroup driver to use...
I0417 17:00:03.629258    7925 detect.go:187] detected "cgroupfs" cgroup driver on host os
I0417 17:00:03.629381    7925 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0417 17:00:03.637771    7925 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0417 17:00:03.637920    7925 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0417 17:00:03.644843    7925 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0417 17:00:03.652625    7925 ssh_runner.go:195] Run: which cri-dockerd
I0417 17:00:03.654564    7925 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0417 17:00:03.660011    7925 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (190 bytes)
I0417 17:00:03.669219    7925 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0417 17:00:03.707356    7925 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0417 17:00:03.743331    7925 docker.go:574] configuring docker to use "cgroupfs" as cgroup driver...
I0417 17:00:03.743476    7925 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0417 17:00:03.753185    7925 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0417 17:00:03.785316    7925 ssh_runner.go:195] Run: sudo systemctl restart docker
I0417 17:00:04.542418    7925 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0417 17:00:04.568553    7925 ssh_runner.go:195] Run: sudo systemctl stop cri-docker.socket
I0417 17:00:04.577521    7925 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0417 17:00:04.583508    7925 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0417 17:00:04.623515    7925 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0417 17:00:04.658946    7925 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0417 17:00:04.693802    7925 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0417 17:00:04.719575    7925 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0417 17:00:04.725489    7925 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0417 17:00:04.764821    7925 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0417 17:00:04.823665    7925 start.go:542] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0417 17:00:04.823949    7925 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0417 17:00:04.826378    7925 start.go:563] Will wait 60s for crictl version
I0417 17:00:04.826536    7925 ssh_runner.go:195] Run: which crictl
I0417 17:00:04.828743    7925 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0417 17:00:04.847088    7925 start.go:579] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  27.4.1
RuntimeApiVersion:  v1
I0417 17:00:04.847248    7925 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0417 17:00:04.864785    7925 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0417 17:00:01.497599    7783 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2024-12-17 15:44:16.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2025-04-17 07:00:00.460181010 +0000
@@ -1,46 +1,49 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0417 17:00:01.497630    7783 machine.go:96] duration metric: took 2.229175292s to provisionDockerMachine
I0417 17:00:01.497645    7783 client.go:171] duration metric: took 5.700443792s to LocalClient.Create
I0417 17:00:01.497709    7783 start.go:167] duration metric: took 5.70079075s to libmachine.API.Create "minikube"
I0417 17:00:01.497721    7783 start.go:293] postStartSetup for "minikube" (driver="docker")
I0417 17:00:01.497742    7783 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0417 17:00:01.497922    7783 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0417 17:00:01.497989    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:01.523209    7783 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:01.606395    7783 ssh_runner.go:195] Run: cat /etc/os-release
I0417 17:00:01.608362    7783 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0417 17:00:01.608390    7783 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0417 17:00:01.608398    7783 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0417 17:00:01.608403    7783 info.go:137] Remote host: Ubuntu 22.04.5 LTS
I0417 17:00:01.608409    7783 filesync.go:126] Scanning /Users/prakashraval/.minikube/addons for local assets ...
I0417 17:00:01.608547    7783 filesync.go:126] Scanning /Users/prakashraval/.minikube/files for local assets ...
I0417 17:00:01.608606    7783 start.go:296] duration metric: took 110.878041ms for postStartSetup
I0417 17:00:01.610066    7783 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0417 17:00:01.634494    7783 profile.go:143] Saving config to /Users/prakashraval/.minikube/profiles/minikube/config.json ...
I0417 17:00:01.635014    7783 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0417 17:00:01.635064    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:01.650414    7783 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:01.728553    7783 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0417 17:00:01.731418    7783 start.go:128] duration metric: took 5.939792125s to createHost
I0417 17:00:01.731430    7783 start.go:83] releasing machines lock for "minikube", held for 5.940010292s
I0417 17:00:01.731560    7783 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0417 17:00:01.753911    7783 ssh_runner.go:195] Run: cat /version.json
I0417 17:00:01.754003    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:01.754985    7783 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0417 17:00:01.755247    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:01.775242    7783 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:01.775319    7783 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:01.855005    7783 ssh_runner.go:195] Run: systemctl --version
I0417 17:00:02.101551    7783 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0417 17:00:02.103943    7783 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0417 17:00:02.118733    7783 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0417 17:00:02.118830    7783 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0417 17:00:02.130952    7783 cni.go:262] disabled [/etc/cni/net.d/87-podman-bridge.conflist, /etc/cni/net.d/100-crio-bridge.conf] bridge cni config(s)
I0417 17:00:02.130982    7783 start.go:495] detecting cgroup driver to use...
I0417 17:00:02.131008    7783 detect.go:187] detected "cgroupfs" cgroup driver on host os
I0417 17:00:02.132160    7783 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0417 17:00:02.139311    7783 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.10"|' /etc/containerd/config.toml"
I0417 17:00:02.144466    7783 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0417 17:00:02.149119    7783 containerd.go:146] configuring containerd to use "cgroupfs" as cgroup driver...
I0417 17:00:02.149262    7783 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0417 17:00:02.153885    7783 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0417 17:00:02.158537    7783 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0417 17:00:02.162968    7783 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0417 17:00:02.167377    7783 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0417 17:00:02.171847    7783 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0417 17:00:02.176596    7783 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0417 17:00:02.181209    7783 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0417 17:00:02.186619    7783 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0417 17:00:02.192625    7783 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0417 17:00:02.197302    7783 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0417 17:00:02.233836    7783 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0417 17:00:02.298186    7783 start.go:495] detecting cgroup driver to use...
I0417 17:00:02.298210    7783 detect.go:187] detected "cgroupfs" cgroup driver on host os
I0417 17:00:02.298716    7783 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0417 17:00:02.306258    7783 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0417 17:00:02.306339    7783 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0417 17:00:02.313006    7783 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0417 17:00:02.321736    7783 ssh_runner.go:195] Run: which cri-dockerd
I0417 17:00:02.323913    7783 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0417 17:00:02.330649    7783 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (190 bytes)
I0417 17:00:02.339784    7783 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0417 17:00:02.380675    7783 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0417 17:00:02.419458    7783 docker.go:574] configuring docker to use "cgroupfs" as cgroup driver...
I0417 17:00:02.419680    7783 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0417 17:00:02.428822    7783 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0417 17:00:02.465674    7783 ssh_runner.go:195] Run: sudo systemctl restart docker
I0417 17:00:03.743333    7783 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.2776315s)
I0417 17:00:03.743475    7783 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0417 17:00:03.750611    7783 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0417 17:00:03.756896    7783 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0417 17:00:03.821132    7783 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0417 17:00:03.871166    7783 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0417 17:00:03.909415    7783 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0417 17:00:03.927656    7783 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0417 17:00:03.933716    7783 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0417 17:00:03.971914    7783 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0417 17:00:04.575824    7783 ssh_runner.go:195] Run: sudo journalctl --no-pager -u cri-docker.service
I0417 17:00:04.581674    7783 start.go:542] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0417 17:00:04.583361    7783 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0417 17:00:04.585677    7783 start.go:563] Will wait 60s for crictl version
I0417 17:00:04.585779    7783 ssh_runner.go:195] Run: which crictl
I0417 17:00:04.587736    7783 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0417 17:00:04.609740    7783 retry.go:31] will retry after 9.923822141s: Temporary Error: sudo /usr/bin/crictl version: Process exited with status 1
stdout:

stderr:
time="2025-04-17T07:00:04Z" level=fatal msg="unable to determine runtime API version: rpc error: code = Unavailable desc = connection error: desc = \"transport: Error while dialing dial unix /var/run/cri-dockerd.sock: connect: connection refused\""
I0417 17:00:04.882958    7925 out.go:235] 🐳  Preparing Kubernetes v1.32.0 on Docker 27.4.1 ...
I0417 17:00:04.883427    7925 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0417 17:00:04.969293    7925 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I0417 17:00:04.970283    7925 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I0417 17:00:04.972751    7925 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.254	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0417 17:00:04.979623    7925 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0417 17:00:05.005267    7925 kubeadm.go:883] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:4600 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0417 17:00:05.005401    7925 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0417 17:00:05.005537    7925 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0417 17:00:05.016075    7925 docker.go:689] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.32.0
registry.k8s.io/kube-controller-manager:v1.32.0
registry.k8s.io/kube-scheduler:v1.32.0
registry.k8s.io/kube-proxy:v1.32.0
registry.k8s.io/etcd:3.5.16-0
registry.k8s.io/coredns/coredns:v1.11.3
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0417 17:00:05.016088    7925 docker.go:619] Images already preloaded, skipping extraction
I0417 17:00:05.016537    7925 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0417 17:00:05.026233    7925 docker.go:689] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.32.0
registry.k8s.io/kube-controller-manager:v1.32.0
registry.k8s.io/kube-scheduler:v1.32.0
registry.k8s.io/kube-proxy:v1.32.0
registry.k8s.io/etcd:3.5.16-0
registry.k8s.io/coredns/coredns:v1.11.3
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0417 17:00:05.026244    7925 cache_images.go:84] Images are preloaded, skipping loading
I0417 17:00:05.026255    7925 kubeadm.go:934] updating node {  8443 v1.32.0 docker true true} ...
I0417 17:00:05.026409    7925 kubeadm.go:946] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.32.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=

[Install]
 config:
{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0417 17:00:05.026535    7925 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0417 17:00:05.061697    7925 cni.go:84] Creating CNI manager for ""
I0417 17:00:05.061727    7925 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0417 17:00:05.062063    7925 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0417 17:00:05.062095    7925 kubeadm.go:189] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress: APIServerPort:8443 KubernetesVersion:v1.32.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", ""]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP: CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0417 17:00:05.062342    7925 kubeadm.go:195] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    - name: "node-ip"
      value: ""
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", ""]
  extraArgs:
    - name: "enable-admission-plugins"
      value: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    - name: "allocate-node-cidrs"
      value: "true"
    - name: "leader-elect"
      value: "false"
scheduler:
  extraArgs:
    - name: "leader-elect"
      value: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      - name: "proxy-refresh-interval"
        value: "70000"
kubernetesVersion: v1.32.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0417 17:00:05.063683    7925 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.32.0
I0417 17:00:05.069220    7925 binaries.go:44] Found k8s binaries, skipping transfer
I0417 17:00:05.069461    7925 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0417 17:00:05.074111    7925 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (295 bytes)
I0417 17:00:05.082826    7925 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0417 17:00:05.092156    7925 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2250 bytes)
I0417 17:00:05.102074    7925 ssh_runner.go:195] Run: grep <nil>	control-plane.minikube.internal$ /etc/hosts
I0417 17:00:05.104483    7925 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "<nil>	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0417 17:00:05.110672    7925 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0417 17:00:05.152811    7925 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0417 17:00:05.177583    7925 certs.go:68] Setting up /Users/prakashraval/.minikube/profiles/minikube for IP: 
I0417 17:00:05.177778    7925 certs.go:194] generating shared ca certs ...
I0417 17:00:05.177798    7925 certs.go:226] acquiring lock for ca certs: {Name:mk3cdcf01e8e9f268808f2c4ab885bc93a481b71 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:05.178461    7925 certs.go:240] generating "minikubeCA" ca cert: /Users/prakashraval/.minikube/ca.key
I0417 17:00:05.300749    7925 crypto.go:156] Writing cert to /Users/prakashraval/.minikube/ca.crt ...
I0417 17:00:05.300759    7925 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/ca.crt: {Name:mkd1ab40aa470bcae764855117d6aa3160f35299 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:05.301071    7925 crypto.go:164] Writing key to /Users/prakashraval/.minikube/ca.key ...
I0417 17:00:05.301074    7925 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/ca.key: {Name:mk9681ffeb052f198de90d36577af97f0a8b1299 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:05.301225    7925 certs.go:240] generating "proxyClientCA" ca cert: /Users/prakashraval/.minikube/proxy-client-ca.key
I0417 17:00:05.497511    7925 crypto.go:156] Writing cert to /Users/prakashraval/.minikube/proxy-client-ca.crt ...
I0417 17:00:05.497517    7925 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/proxy-client-ca.crt: {Name:mk23ca65b42a74d1e9be6fd528e15f7f795739a1 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:05.497788    7925 crypto.go:164] Writing key to /Users/prakashraval/.minikube/proxy-client-ca.key ...
I0417 17:00:05.497790    7925 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/proxy-client-ca.key: {Name:mke1a4fa8bd4877b015587c1038de1f224346e69 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:05.497925    7925 certs.go:256] generating profile certs ...
I0417 17:00:05.497966    7925 certs.go:363] generating signed profile cert for "minikube-user": /Users/prakashraval/.minikube/profiles/minikube/client.key
I0417 17:00:05.497972    7925 crypto.go:68] Generating cert /Users/prakashraval/.minikube/profiles/minikube/client.crt with IP's: []
I0417 17:00:05.670926    7925 crypto.go:156] Writing cert to /Users/prakashraval/.minikube/profiles/minikube/client.crt ...
I0417 17:00:05.670929    7925 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/profiles/minikube/client.crt: {Name:mk8fb00b2129af8bb4e1005271760825422311c8 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:05.671145    7925 crypto.go:164] Writing key to /Users/prakashraval/.minikube/profiles/minikube/client.key ...
I0417 17:00:05.671147    7925 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/profiles/minikube/client.key: {Name:mk3a2a41749ae74067e5edef2c822ee27f2590af Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:05.671516    7925 certs.go:363] generating signed profile cert for "minikube": /Users/prakashraval/.minikube/profiles/minikube/apiserver.key.723e0a6b
I0417 17:00:05.671528    7925 crypto.go:68] Generating cert /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt.723e0a6b with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 <nil>]
I0417 17:00:05.741680    7925 crypto.go:156] Writing cert to /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt.723e0a6b ...
I0417 17:00:05.741693    7925 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt.723e0a6b: {Name:mk90e6980952bf1220717d975994339dc05ffe89 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:05.742041    7925 crypto.go:164] Writing key to /Users/prakashraval/.minikube/profiles/minikube/apiserver.key.723e0a6b ...
I0417 17:00:05.742045    7925 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/profiles/minikube/apiserver.key.723e0a6b: {Name:mkd729303963d8216427ff564b78cbd2544bd063 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:05.742200    7925 certs.go:381] copying /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt.723e0a6b -> /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt
I0417 17:00:05.742340    7925 certs.go:385] copying /Users/prakashraval/.minikube/profiles/minikube/apiserver.key.723e0a6b -> /Users/prakashraval/.minikube/profiles/minikube/apiserver.key
I0417 17:00:05.742472    7925 certs.go:363] generating signed profile cert for "aggregator": /Users/prakashraval/.minikube/profiles/minikube/proxy-client.key
I0417 17:00:05.742484    7925 crypto.go:68] Generating cert /Users/prakashraval/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I0417 17:00:05.849437    7925 crypto.go:156] Writing cert to /Users/prakashraval/.minikube/profiles/minikube/proxy-client.crt ...
I0417 17:00:05.849448    7925 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/profiles/minikube/proxy-client.crt: {Name:mka1d5823ecb1a7915809db7f24406473d428fa6 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:05.849806    7925 crypto.go:164] Writing key to /Users/prakashraval/.minikube/profiles/minikube/proxy-client.key ...
I0417 17:00:05.849809    7925 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/profiles/minikube/proxy-client.key: {Name:mk859d37f80bac1249634a8ab1e61e281b85d3bc Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:05.850130    7925 certs.go:484] found cert: /Users/prakashraval/.minikube/certs/ca-key.pem (1679 bytes)
I0417 17:00:05.850162    7925 certs.go:484] found cert: /Users/prakashraval/.minikube/certs/ca.pem (1094 bytes)
I0417 17:00:05.850184    7925 certs.go:484] found cert: /Users/prakashraval/.minikube/certs/cert.pem (1139 bytes)
I0417 17:00:05.850203    7925 certs.go:484] found cert: /Users/prakashraval/.minikube/certs/key.pem (1675 bytes)
I0417 17:00:05.851134    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0417 17:00:05.873244    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0417 17:00:05.886214    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0417 17:00:05.897366    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0417 17:00:05.908817    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1407 bytes)
I0417 17:00:05.920115    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0417 17:00:05.931009    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0417 17:00:05.942484    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0417 17:00:05.953795    7925 ssh_runner.go:362] scp /Users/prakashraval/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0417 17:00:05.971336    7925 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (740 bytes)
I0417 17:00:05.982014    7925 ssh_runner.go:195] Run: openssl version
I0417 17:00:05.985596    7925 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0417 17:00:05.992452    7925 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0417 17:00:05.994367    7925 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Apr 17 07:00 /usr/share/ca-certificates/minikubeCA.pem
I0417 17:00:05.994418    7925 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0417 17:00:05.998124    7925 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0417 17:00:06.002804    7925 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0417 17:00:06.004678    7925 certs.go:399] 'apiserver-kubelet-client' cert doesn't exist, likely first start: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt: Process exited with status 1
stdout:

stderr:
stat: cannot statx '/var/lib/minikube/certs/apiserver-kubelet-client.crt': No such file or directory
I0417 17:00:06.004760    7925 kubeadm.go:392] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:4600 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0417 17:00:06.004860    7925 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0417 17:00:06.015002    7925 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0417 17:00:06.019595    7925 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0417 17:00:06.023619    7925 kubeadm.go:214] ignoring SystemVerification for kubeadm because of docker driver
I0417 17:00:06.023677    7925 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0417 17:00:06.029309    7925 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0417 17:00:06.029314    7925 kubeadm.go:157] found existing configuration files:

I0417 17:00:06.029378    7925 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0417 17:00:06.033696    7925 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0417 17:00:06.033736    7925 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0417 17:00:06.038513    7925 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0417 17:00:06.043078    7925 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0417 17:00:06.043161    7925 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0417 17:00:06.047299    7925 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0417 17:00:06.051219    7925 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0417 17:00:06.051302    7925 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0417 17:00:06.055160    7925 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0417 17:00:06.059059    7925 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0417 17:00:06.059115    7925 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0417 17:00:06.062898    7925 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.32.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0417 17:00:06.099301    7925 kubeadm.go:310] apiServer.certSANs: Invalid value: "": altname is not a valid IP address, DNS label or a DNS label with subdomain wildcards: a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'); a wildcard DNS-1123 subdomain must start with '*.', followed by a valid DNS subdomain, which must consist of lower case alphanumeric characters, '-' or '.' and end with an alphanumeric character (e.g. '*.example.com', regex used for validation is '\*\.[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')
I0417 17:00:06.099489    7925 kubeadm.go:310] To see the stack trace of this error execute with --v=5 or higher
W0417 17:00:06.099707    7925 out.go:270] 💢  initialization failed, will try again: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.32.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 3
stdout:

stderr:
apiServer.certSANs: Invalid value: "": altname is not a valid IP address, DNS label or a DNS label with subdomain wildcards: a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'); a wildcard DNS-1123 subdomain must start with '*.', followed by a valid DNS subdomain, which must consist of lower case alphanumeric characters, '-' or '.' and end with an alphanumeric character (e.g. '*.example.com', regex used for validation is '\*\.[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')
To see the stack trace of this error execute with --v=5 or higher

I0417 17:00:06.099844    7925 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.32.0:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
I0417 17:00:06.132160    7925 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0417 17:00:06.139518    7925 kubeadm.go:214] ignoring SystemVerification for kubeadm because of docker driver
I0417 17:00:06.139658    7925 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0417 17:00:06.144754    7925 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0417 17:00:06.144763    7925 kubeadm.go:157] found existing configuration files:

I0417 17:00:06.144874    7925 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0417 17:00:06.149465    7925 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0417 17:00:06.149582    7925 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0417 17:00:06.153707    7925 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0417 17:00:06.157866    7925 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0417 17:00:06.158013    7925 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0417 17:00:06.162024    7925 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0417 17:00:06.166332    7925 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0417 17:00:06.166454    7925 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0417 17:00:06.170576    7925 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0417 17:00:06.174782    7925 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0417 17:00:06.174897    7925 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0417 17:00:06.178722    7925 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.32.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0417 17:00:06.202524    7925 kubeadm.go:310] apiServer.certSANs: Invalid value: "": altname is not a valid IP address, DNS label or a DNS label with subdomain wildcards: a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'); a wildcard DNS-1123 subdomain must start with '*.', followed by a valid DNS subdomain, which must consist of lower case alphanumeric characters, '-' or '.' and end with an alphanumeric character (e.g. '*.example.com', regex used for validation is '\*\.[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')
I0417 17:00:06.202641    7925 kubeadm.go:310] To see the stack trace of this error execute with --v=5 or higher
I0417 17:00:06.202693    7925 kubeadm.go:394] duration metric: took 197.93175ms to StartCluster
I0417 17:00:06.202752    7925 cri.go:54] listing CRI containers in root : {State:all Name:kube-apiserver Namespaces:[]}
I0417 17:00:06.202988    7925 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-apiserver
I0417 17:00:06.223584    7925 cri.go:89] found id: ""
I0417 17:00:06.223610    7925 logs.go:282] 0 containers: []
W0417 17:00:06.223630    7925 logs.go:284] No container was found matching "kube-apiserver"
I0417 17:00:06.223641    7925 cri.go:54] listing CRI containers in root : {State:all Name:etcd Namespaces:[]}
I0417 17:00:06.223835    7925 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=etcd
I0417 17:00:06.243940    7925 cri.go:89] found id: ""
I0417 17:00:06.243959    7925 logs.go:282] 0 containers: []
W0417 17:00:06.243974    7925 logs.go:284] No container was found matching "etcd"
I0417 17:00:06.243982    7925 cri.go:54] listing CRI containers in root : {State:all Name:coredns Namespaces:[]}
I0417 17:00:06.244158    7925 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=coredns
I0417 17:00:06.264980    7925 cri.go:89] found id: ""
I0417 17:00:06.264995    7925 logs.go:282] 0 containers: []
W0417 17:00:06.265004    7925 logs.go:284] No container was found matching "coredns"
I0417 17:00:06.265008    7925 cri.go:54] listing CRI containers in root : {State:all Name:kube-scheduler Namespaces:[]}
I0417 17:00:06.265164    7925 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-scheduler
I0417 17:00:06.284535    7925 cri.go:89] found id: ""
I0417 17:00:06.284552    7925 logs.go:282] 0 containers: []
W0417 17:00:06.284568    7925 logs.go:284] No container was found matching "kube-scheduler"
I0417 17:00:06.284577    7925 cri.go:54] listing CRI containers in root : {State:all Name:kube-proxy Namespaces:[]}
I0417 17:00:06.284748    7925 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-proxy
I0417 17:00:06.302510    7925 cri.go:89] found id: ""
I0417 17:00:06.302524    7925 logs.go:282] 0 containers: []
W0417 17:00:06.302537    7925 logs.go:284] No container was found matching "kube-proxy"
I0417 17:00:06.302546    7925 cri.go:54] listing CRI containers in root : {State:all Name:kube-controller-manager Namespaces:[]}
I0417 17:00:06.302732    7925 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-controller-manager
I0417 17:00:06.321272    7925 cri.go:89] found id: ""
I0417 17:00:06.321285    7925 logs.go:282] 0 containers: []
W0417 17:00:06.321299    7925 logs.go:284] No container was found matching "kube-controller-manager"
I0417 17:00:06.321308    7925 cri.go:54] listing CRI containers in root : {State:all Name:kindnet Namespaces:[]}
I0417 17:00:06.321464    7925 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kindnet
I0417 17:00:06.338456    7925 cri.go:89] found id: ""
I0417 17:00:06.338460    7925 logs.go:282] 0 containers: []
W0417 17:00:06.338464    7925 logs.go:284] No container was found matching "kindnet"
I0417 17:00:06.338472    7925 logs.go:123] Gathering logs for dmesg ...
I0417 17:00:06.338478    7925 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0417 17:00:06.344652    7925 logs.go:123] Gathering logs for describe nodes ...
I0417 17:00:06.344661    7925 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.32.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
W0417 17:00:06.402256    7925 logs.go:130] failed describe nodes: command: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.32.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig" /bin/bash -c "sudo /var/lib/minikube/binaries/v1.32.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig": Process exited with status 1
stdout:

stderr:
E0417 07:00:06.388655    2568 cert_rotation.go:171] "Unhandled Error" err="key failed with : x509: cannot parse IP address of length 0"
E0417 07:00:06.389224    2568 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E0417 07:00:06.391967    2568 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E0417 07:00:06.393781    2568 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E0417 07:00:06.395712    2568 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E0417 07:00:06.397605    2568 cert_rotation.go:171] "Unhandled Error" err="key failed with : x509: cannot parse IP address of length 0"
E0417 07:00:06.397865    2568 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
The connection to the server localhost:8443 was refused - did you specify the right host or port?
 output: 
** stderr ** 
E0417 07:00:06.388655    2568 cert_rotation.go:171] "Unhandled Error" err="key failed with : x509: cannot parse IP address of length 0"
E0417 07:00:06.389224    2568 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E0417 07:00:06.391967    2568 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E0417 07:00:06.393781    2568 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E0417 07:00:06.395712    2568 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E0417 07:00:06.397605    2568 cert_rotation.go:171] "Unhandled Error" err="key failed with : x509: cannot parse IP address of length 0"
E0417 07:00:06.397865    2568 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
The connection to the server localhost:8443 was refused - did you specify the right host or port?

** /stderr **
I0417 17:00:06.402284    7925 logs.go:123] Gathering logs for Docker ...
I0417 17:00:06.402290    7925 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0417 17:00:06.419022    7925 logs.go:123] Gathering logs for container status ...
I0417 17:00:06.419040    7925 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0417 17:00:06.440478    7925 logs.go:123] Gathering logs for kubelet ...
I0417 17:00:06.440494    7925 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0417 17:00:06.448302    7925 out.go:418] Error starting cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.32.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 3
stdout:

stderr:
apiServer.certSANs: Invalid value: "": altname is not a valid IP address, DNS label or a DNS label with subdomain wildcards: a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'); a wildcard DNS-1123 subdomain must start with '*.', followed by a valid DNS subdomain, which must consist of lower case alphanumeric characters, '-' or '.' and end with an alphanumeric character (e.g. '*.example.com', regex used for validation is '\*\.[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')
To see the stack trace of this error execute with --v=5 or higher
W0417 17:00:06.448339    7925 out.go:270] 
W0417 17:00:06.448399    7925 out.go:270] 💣  Error starting cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.32.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 3
stdout:

stderr:
apiServer.certSANs: Invalid value: "": altname is not a valid IP address, DNS label or a DNS label with subdomain wildcards: a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'); a wildcard DNS-1123 subdomain must start with '*.', followed by a valid DNS subdomain, which must consist of lower case alphanumeric characters, '-' or '.' and end with an alphanumeric character (e.g. '*.example.com', regex used for validation is '\*\.[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')
To see the stack trace of this error execute with --v=5 or higher

W0417 17:00:06.448428    7925 out.go:270] 
W0417 17:00:06.449088    7925 out.go:293] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0417 17:00:06.459710    7925 out.go:201] 
W0417 17:00:06.464747    7925 out.go:270] ❌  Exiting due to K8S_INVALID_CERT_HOSTNAME: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.32.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 3
stdout:

stderr:
apiServer.certSANs: Invalid value: "": altname is not a valid IP address, DNS label or a DNS label with subdomain wildcards: a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'); a wildcard DNS-1123 subdomain must start with '*.', followed by a valid DNS subdomain, which must consist of lower case alphanumeric characters, '-' or '.' and end with an alphanumeric character (e.g. '*.example.com', regex used for validation is '\*\.[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')
To see the stack trace of this error execute with --v=5 or higher

W0417 17:00:06.464829    7925 out.go:270] 💡  Suggestion: The certificate hostname provided appears to be invalid (may be a minikube bug, try 'minikube delete')
W0417 17:00:06.464874    7925 out.go:270] 🍿  Related issue: https://github.com/kubernetes/minikube/issues/9175
W0417 17:00:06.464883    7925 out.go:270] 
W0417 17:00:06.465798    7925 out.go:293] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0417 17:00:06.470724    7925 out.go:201] 
I0417 17:00:14.535170    7783 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0417 17:00:14.557971    7783 start.go:579] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  27.4.1
RuntimeApiVersion:  v1
I0417 17:00:14.558067    7783 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0417 17:00:14.570246    7783 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0417 17:00:14.586817    7783 out.go:235] 🐳  Preparing Kubernetes v1.32.0 on Docker 27.4.1 ...
I0417 17:00:14.587187    7783 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0417 17:00:14.659794    7783 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I0417 17:00:14.660141    7783 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I0417 17:00:14.662643    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0417 17:00:14.684793    7783 kubeadm.go:883] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:4600 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0417 17:00:14.684866    7783 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0417 17:00:14.684935    7783 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0417 17:00:14.695483    7783 docker.go:689] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.32.0
registry.k8s.io/kube-controller-manager:v1.32.0
registry.k8s.io/kube-scheduler:v1.32.0
registry.k8s.io/kube-proxy:v1.32.0
registry.k8s.io/etcd:3.5.16-0
registry.k8s.io/coredns/coredns:v1.11.3
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0417 17:00:14.695496    7783 docker.go:619] Images already preloaded, skipping extraction
I0417 17:00:14.695597    7783 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0417 17:00:14.705240    7783 docker.go:689] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.32.0
registry.k8s.io/kube-controller-manager:v1.32.0
registry.k8s.io/kube-scheduler:v1.32.0
registry.k8s.io/kube-proxy:v1.32.0
registry.k8s.io/etcd:3.5.16-0
registry.k8s.io/coredns/coredns:v1.11.3
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0417 17:00:14.705250    7783 cache_images.go:84] Images are preloaded, skipping loading
I0417 17:00:14.705256    7783 kubeadm.go:934] updating node { 192.168.49.2 8443 v1.32.0 docker true true} ...
I0417 17:00:14.705361    7783 kubeadm.go:946] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.32.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0417 17:00:14.705428    7783 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0417 17:00:14.727869    7783 cni.go:84] Creating CNI manager for ""
I0417 17:00:14.727884    7783 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0417 17:00:14.727908    7783 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0417 17:00:14.727926    7783 kubeadm.go:189] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.32.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0417 17:00:14.728052    7783 kubeadm.go:195] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    - name: "node-ip"
      value: "192.168.49.2"
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    - name: "enable-admission-plugins"
      value: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    - name: "allocate-node-cidrs"
      value: "true"
    - name: "leader-elect"
      value: "false"
scheduler:
  extraArgs:
    - name: "leader-elect"
      value: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      - name: "proxy-refresh-interval"
        value: "70000"
kubernetesVersion: v1.32.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0417 17:00:14.728203    7783 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.32.0
I0417 17:00:14.732853    7783 binaries.go:44] Found k8s binaries, skipping transfer
I0417 17:00:14.732908    7783 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0417 17:00:14.737029    7783 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0417 17:00:14.745331    7783 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0417 17:00:14.753476    7783 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2286 bytes)
I0417 17:00:14.761651    7783 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0417 17:00:14.763572    7783 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0417 17:00:14.768721    7783 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0417 17:00:14.805196    7783 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0417 17:00:14.829535    7783 certs.go:68] Setting up /Users/prakashraval/.minikube/profiles/minikube for IP: 192.168.49.2
I0417 17:00:14.829551    7783 certs.go:194] generating shared ca certs ...
I0417 17:00:14.829578    7783 certs.go:226] acquiring lock for ca certs: {Name:mk3cdcf01e8e9f268808f2c4ab885bc93a481b71 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:14.829892    7783 certs.go:235] skipping valid "minikubeCA" ca cert: /Users/prakashraval/.minikube/ca.key
I0417 17:00:14.829979    7783 certs.go:235] skipping valid "proxyClientCA" ca cert: /Users/prakashraval/.minikube/proxy-client-ca.key
I0417 17:00:14.829986    7783 certs.go:256] generating profile certs ...
I0417 17:00:14.830093    7783 certs.go:359] skipping valid signed profile cert regeneration for "minikube-user": /Users/prakashraval/.minikube/profiles/minikube/client.key
I0417 17:00:14.830118    7783 certs.go:363] generating signed profile cert for "minikube": /Users/prakashraval/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I0417 17:00:14.830133    7783 crypto.go:68] Generating cert /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt.7fb57e3c with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 192.168.49.2]
I0417 17:00:15.070119    7783 crypto.go:156] Writing cert to /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt.7fb57e3c ...
I0417 17:00:15.070132    7783 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt.7fb57e3c: {Name:mkb1df0e466c23eacef83784544174226a7f91fe Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:15.070536    7783 crypto.go:164] Writing key to /Users/prakashraval/.minikube/profiles/minikube/apiserver.key.7fb57e3c ...
I0417 17:00:15.070539    7783 lock.go:35] WriteFile acquiring /Users/prakashraval/.minikube/profiles/minikube/apiserver.key.7fb57e3c: {Name:mkc2b8c2197727ca68812955319f44f8fdbb1e71 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:15.070709    7783 certs.go:381] copying /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt.7fb57e3c -> /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt
I0417 17:00:15.070912    7783 certs.go:385] copying /Users/prakashraval/.minikube/profiles/minikube/apiserver.key.7fb57e3c -> /Users/prakashraval/.minikube/profiles/minikube/apiserver.key
I0417 17:00:15.071101    7783 certs.go:359] skipping valid signed profile cert regeneration for "aggregator": /Users/prakashraval/.minikube/profiles/minikube/proxy-client.key
I0417 17:00:15.071268    7783 certs.go:484] found cert: /Users/prakashraval/.minikube/certs/ca-key.pem (1679 bytes)
I0417 17:00:15.071302    7783 certs.go:484] found cert: /Users/prakashraval/.minikube/certs/ca.pem (1094 bytes)
I0417 17:00:15.071334    7783 certs.go:484] found cert: /Users/prakashraval/.minikube/certs/cert.pem (1139 bytes)
I0417 17:00:15.071360    7783 certs.go:484] found cert: /Users/prakashraval/.minikube/certs/key.pem (1675 bytes)
I0417 17:00:15.071761    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0417 17:00:15.094483    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0417 17:00:15.107523    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0417 17:00:15.119277    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0417 17:00:15.130851    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0417 17:00:15.143104    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0417 17:00:15.154712    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0417 17:00:15.167328    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0417 17:00:15.178982    7783 ssh_runner.go:362] scp /Users/prakashraval/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0417 17:00:15.189884    7783 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (740 bytes)
I0417 17:00:15.199658    7783 ssh_runner.go:195] Run: openssl version
I0417 17:00:15.202449    7783 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0417 17:00:15.206884    7783 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0417 17:00:15.208833    7783 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Apr 17 07:00 /usr/share/ca-certificates/minikubeCA.pem
I0417 17:00:15.208861    7783 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0417 17:00:15.212447    7783 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0417 17:00:15.216552    7783 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0417 17:00:15.218312    7783 certs.go:399] 'apiserver-kubelet-client' cert doesn't exist, likely first start: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt: Process exited with status 1
stdout:

stderr:
stat: cannot statx '/var/lib/minikube/certs/apiserver-kubelet-client.crt': No such file or directory
I0417 17:00:15.218350    7783 kubeadm.go:392] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:4600 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0417 17:00:15.218429    7783 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0417 17:00:15.227343    7783 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0417 17:00:15.231689    7783 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0417 17:00:15.235671    7783 kubeadm.go:214] ignoring SystemVerification for kubeadm because of docker driver
I0417 17:00:15.235719    7783 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0417 17:00:15.239704    7783 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0417 17:00:15.239709    7783 kubeadm.go:157] found existing configuration files:

I0417 17:00:15.239745    7783 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0417 17:00:15.243707    7783 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0417 17:00:15.243748    7783 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0417 17:00:15.248798    7783 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0417 17:00:15.252711    7783 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0417 17:00:15.252746    7783 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0417 17:00:15.256509    7783 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0417 17:00:15.260465    7783 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0417 17:00:15.260495    7783 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0417 17:00:15.264255    7783 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0417 17:00:15.268113    7783 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0417 17:00:15.268146    7783 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0417 17:00:15.271840    7783 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.32.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0417 17:00:15.294376    7783 kubeadm.go:310] [init] Using Kubernetes version: v1.32.0
I0417 17:00:15.294433    7783 kubeadm.go:310] [preflight] Running pre-flight checks
I0417 17:00:15.338391    7783 kubeadm.go:310] [preflight] Pulling images required for setting up a Kubernetes cluster
I0417 17:00:15.338491    7783 kubeadm.go:310] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0417 17:00:15.338568    7783 kubeadm.go:310] [preflight] You can also perform this action beforehand using 'kubeadm config images pull'
I0417 17:00:15.344001    7783 kubeadm.go:310] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0417 17:00:15.351404    7783 out.go:235]     ▪ Generating certificates and keys ...
I0417 17:00:15.351679    7783 kubeadm.go:310] [certs] Using existing ca certificate authority
I0417 17:00:15.351907    7783 kubeadm.go:310] [certs] Using existing apiserver certificate and key on disk
I0417 17:00:15.605448    7783 kubeadm.go:310] [certs] Generating "apiserver-kubelet-client" certificate and key
I0417 17:00:15.677239    7783 kubeadm.go:310] [certs] Generating "front-proxy-ca" certificate and key
I0417 17:00:15.801484    7783 kubeadm.go:310] [certs] Generating "front-proxy-client" certificate and key
I0417 17:00:15.913494    7783 kubeadm.go:310] [certs] Generating "etcd/ca" certificate and key
I0417 17:00:16.105199    7783 kubeadm.go:310] [certs] Generating "etcd/server" certificate and key
I0417 17:00:16.105318    7783 kubeadm.go:310] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0417 17:00:16.173183    7783 kubeadm.go:310] [certs] Generating "etcd/peer" certificate and key
I0417 17:00:16.173284    7783 kubeadm.go:310] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0417 17:00:16.295786    7783 kubeadm.go:310] [certs] Generating "etcd/healthcheck-client" certificate and key
I0417 17:00:16.524978    7783 kubeadm.go:310] [certs] Generating "apiserver-etcd-client" certificate and key
I0417 17:00:16.710135    7783 kubeadm.go:310] [certs] Generating "sa" key and public key
I0417 17:00:16.710353    7783 kubeadm.go:310] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0417 17:00:16.832704    7783 kubeadm.go:310] [kubeconfig] Writing "admin.conf" kubeconfig file
I0417 17:00:16.891033    7783 kubeadm.go:310] [kubeconfig] Writing "super-admin.conf" kubeconfig file
I0417 17:00:16.977726    7783 kubeadm.go:310] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0417 17:00:17.265051    7783 kubeadm.go:310] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0417 17:00:17.495928    7783 kubeadm.go:310] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0417 17:00:17.496426    7783 kubeadm.go:310] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0417 17:00:17.500346    7783 kubeadm.go:310] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0417 17:00:17.503924    7783 out.go:235]     ▪ Booting up control plane ...
I0417 17:00:17.504064    7783 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0417 17:00:17.504129    7783 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0417 17:00:17.504193    7783 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0417 17:00:17.506554    7783 kubeadm.go:310] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0417 17:00:17.509580    7783 kubeadm.go:310] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0417 17:00:17.509618    7783 kubeadm.go:310] [kubelet-start] Starting the kubelet
I0417 17:00:17.562231    7783 kubeadm.go:310] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
I0417 17:00:17.562336    7783 kubeadm.go:310] [kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
I0417 17:00:18.066814    7783 kubeadm.go:310] [kubelet-check] The kubelet is healthy after 504.398958ms
I0417 17:00:18.067054    7783 kubeadm.go:310] [api-check] Waiting for a healthy API server. This can take up to 4m0s
I0417 17:00:21.573147    7783 kubeadm.go:310] [api-check] The API server is healthy after 3.506502794s
I0417 17:00:21.581085    7783 kubeadm.go:310] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0417 17:00:21.584950    7783 kubeadm.go:310] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0417 17:00:21.592914    7783 kubeadm.go:310] [upload-certs] Skipping phase. Please see --upload-certs
I0417 17:00:21.593065    7783 kubeadm.go:310] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0417 17:00:21.595905    7783 kubeadm.go:310] [bootstrap-token] Using token: iwy76u.8xh1pztgmicdjn21
I0417 17:00:21.599076    7783 out.go:235]     ▪ Configuring RBAC rules ...
I0417 17:00:21.599282    7783 kubeadm.go:310] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0417 17:00:21.600225    7783 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0417 17:00:21.603580    7783 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0417 17:00:21.604845    7783 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0417 17:00:21.605602    7783 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0417 17:00:21.606427    7783 kubeadm.go:310] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0417 17:00:21.982539    7783 kubeadm.go:310] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0417 17:00:22.391280    7783 kubeadm.go:310] [addons] Applied essential addon: CoreDNS
I0417 17:00:22.984430    7783 kubeadm.go:310] [addons] Applied essential addon: kube-proxy
I0417 17:00:22.986101    7783 kubeadm.go:310] 
I0417 17:00:22.986182    7783 kubeadm.go:310] Your Kubernetes control-plane has initialized successfully!
I0417 17:00:22.986189    7783 kubeadm.go:310] 
I0417 17:00:22.986336    7783 kubeadm.go:310] To start using your cluster, you need to run the following as a regular user:
I0417 17:00:22.986344    7783 kubeadm.go:310] 
I0417 17:00:22.986382    7783 kubeadm.go:310]   mkdir -p $HOME/.kube
I0417 17:00:22.986452    7783 kubeadm.go:310]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0417 17:00:22.986505    7783 kubeadm.go:310]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0417 17:00:22.986509    7783 kubeadm.go:310] 
I0417 17:00:22.986567    7783 kubeadm.go:310] Alternatively, if you are the root user, you can run:
I0417 17:00:22.986571    7783 kubeadm.go:310] 
I0417 17:00:22.986620    7783 kubeadm.go:310]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0417 17:00:22.986624    7783 kubeadm.go:310] 
I0417 17:00:22.986678    7783 kubeadm.go:310] You should now deploy a pod network to the cluster.
I0417 17:00:22.986776    7783 kubeadm.go:310] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0417 17:00:22.986882    7783 kubeadm.go:310]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0417 17:00:22.986888    7783 kubeadm.go:310] 
I0417 17:00:22.986983    7783 kubeadm.go:310] You can now join any number of control-plane nodes by copying certificate authorities
I0417 17:00:22.987089    7783 kubeadm.go:310] and service account keys on each node and then running the following as root:
I0417 17:00:22.987094    7783 kubeadm.go:310] 
I0417 17:00:22.987206    7783 kubeadm.go:310]   kubeadm join control-plane.minikube.internal:8443 --token iwy76u.8xh1pztgmicdjn21 \
I0417 17:00:22.987342    7783 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:d3481a40c0df100dcd0f362015a14dced3607f3f913a6169c6b2482ca43ea4fa \
I0417 17:00:22.987405    7783 kubeadm.go:310] 	--control-plane 
I0417 17:00:22.987409    7783 kubeadm.go:310] 
I0417 17:00:22.987532    7783 kubeadm.go:310] Then you can join any number of worker nodes by running the following on each as root:
I0417 17:00:22.987537    7783 kubeadm.go:310] 
I0417 17:00:22.987644    7783 kubeadm.go:310] kubeadm join control-plane.minikube.internal:8443 --token iwy76u.8xh1pztgmicdjn21 \
I0417 17:00:22.987784    7783 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:d3481a40c0df100dcd0f362015a14dced3607f3f913a6169c6b2482ca43ea4fa 
I0417 17:00:22.991328    7783 kubeadm.go:310] 	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
I0417 17:00:22.991461    7783 kubeadm.go:310] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0417 17:00:22.991481    7783 cni.go:84] Creating CNI manager for ""
I0417 17:00:22.991499    7783 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0417 17:00:22.995765    7783 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0417 17:00:23.000210    7783 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0417 17:00:23.011223    7783 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (496 bytes)
I0417 17:00:23.024271    7783 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0417 17:00:23.024499    7783 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.32.0/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0417 17:00:23.024798    7783 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig label --overwrite nodes minikube minikube.k8s.io/updated_at=2025_04_17T17_00_23_0700 minikube.k8s.io/version=v1.35.0 minikube.k8s.io/commit=dd5d320e41b5451cdf3c01891bc4e13d189586ed-dirty minikube.k8s.io/name=minikube minikube.k8s.io/primary=true
I0417 17:00:23.068017    7783 ops.go:34] apiserver oom_adj: -16
I0417 17:00:23.068017    7783 kubeadm.go:1113] duration metric: took 43.731417ms to wait for elevateKubeSystemPrivileges
I0417 17:00:23.074724    7783 kubeadm.go:394] duration metric: took 7.856313334s to StartCluster
I0417 17:00:23.074752    7783 settings.go:142] acquiring lock: {Name:mk46b969603f632008c1d7a2b52cffae474042ea Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:23.075220    7783 settings.go:150] Updating kubeconfig:  /Users/prakashraval/.kube/config
I0417 17:00:23.079369    7783 lock.go:35] WriteFile acquiring /Users/prakashraval/.kube/config: {Name:mk6532b15c1a0a516b80184a511f2e67428e53ed Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0417 17:00:23.080785    7783 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0417 17:00:23.080992    7783 start.go:235] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0417 17:00:23.081069    7783 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.32.0
I0417 17:00:23.080993    7783 addons.go:511] enable addons start: toEnable=map[ambassador:false amd-gpu-device-plugin:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volcano:false volumesnapshots:false yakd:false]
I0417 17:00:23.081087    7783 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0417 17:00:23.081110    7783 addons.go:238] Setting addon storage-provisioner=true in "minikube"
I0417 17:00:23.081110    7783 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0417 17:00:23.081129    7783 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0417 17:00:23.081137    7783 host.go:66] Checking if "minikube" exists ...
I0417 17:00:23.081627    7783 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0417 17:00:23.081854    7783 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0417 17:00:23.083216    7783 out.go:177] 🔎  Verifying Kubernetes components...
I0417 17:00:23.086903    7783 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0417 17:00:23.102728    7783 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0417 17:00:23.105938    7783 addons.go:435] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0417 17:00:23.105947    7783 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0417 17:00:23.106079    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:23.109188    7783 addons.go:238] Setting addon default-storageclass=true in "minikube"
I0417 17:00:23.109223    7783 host.go:66] Checking if "minikube" exists ...
I0417 17:00:23.109604    7783 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0417 17:00:23.121757    7783 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:23.123613    7783 addons.go:435] installing /etc/kubernetes/addons/storageclass.yaml
I0417 17:00:23.123622    7783 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0417 17:00:23.123705    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0417 17:00:23.127003    7783 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.254 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0417 17:00:23.136821    7783 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0417 17:00:23.138881    7783 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50305 SSHKeyPath:/Users/prakashraval/.minikube/machines/minikube/id_rsa Username:docker}
I0417 17:00:23.253199    7783 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0417 17:00:23.259284    7783 start.go:971] {"host.minikube.internal": 192.168.65.254} host record injected into CoreDNS's ConfigMap
I0417 17:00:23.259352    7783 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0417 17:00:23.274463    7783 api_server.go:52] waiting for apiserver process to appear ...
I0417 17:00:23.274518    7783 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0417 17:00:23.303454    7783 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0417 17:00:23.478407    7783 api_server.go:72] duration metric: took 397.380375ms to wait for apiserver process to appear ...
I0417 17:00:23.478427    7783 api_server.go:88] waiting for apiserver healthz status ...
I0417 17:00:23.478762    7783 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:50304/healthz ...
I0417 17:00:23.482714    7783 api_server.go:279] https://127.0.0.1:50304/healthz returned 200:
ok
I0417 17:00:23.483414    7783 api_server.go:141] control plane version: v1.32.0
I0417 17:00:23.483423    7783 api_server.go:131] duration metric: took 4.991208ms to wait for apiserver health ...
I0417 17:00:23.483428    7783 system_pods.go:43] waiting for kube-system pods to appear ...
I0417 17:00:23.486405    7783 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I0417 17:00:23.490379    7783 addons.go:514] duration metric: took 409.380417ms for enable addons: enabled=[storage-provisioner default-storageclass]
I0417 17:00:23.490522    7783 system_pods.go:59] 5 kube-system pods found
I0417 17:00:23.490543    7783 system_pods.go:61] "etcd-minikube" [f9137df3-f621-4dfc-a146-60ade7d077dd] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0417 17:00:23.490561    7783 system_pods.go:61] "kube-apiserver-minikube" [52b9ed47-27ee-4246-8f5c-b836d2071d34] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0417 17:00:23.490571    7783 system_pods.go:61] "kube-controller-manager-minikube" [676b861e-955f-479b-9b50-38a5d99ed9ec] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0417 17:00:23.490578    7783 system_pods.go:61] "kube-scheduler-minikube" [41adb74f-bcae-4c52-ac77-e0a46146374c] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0417 17:00:23.490583    7783 system_pods.go:61] "storage-provisioner" [2d3de4a5-6072-4e61-8243-c749dc03b814] Pending
I0417 17:00:23.490589    7783 system_pods.go:74] duration metric: took 7.156125ms to wait for pod list to return data ...
I0417 17:00:23.490599    7783 kubeadm.go:582] duration metric: took 409.580959ms to wait for: map[apiserver:true system_pods:true]
I0417 17:00:23.490619    7783 node_conditions.go:102] verifying NodePressure condition ...
I0417 17:00:23.492931    7783 node_conditions.go:122] node storage ephemeral capacity is 61202244Ki
I0417 17:00:23.492948    7783 node_conditions.go:123] node cpu capacity is 11
I0417 17:00:23.492975    7783 node_conditions.go:105] duration metric: took 2.3495ms to run NodePressure ...
I0417 17:00:23.492988    7783 start.go:241] waiting for startup goroutines ...
I0417 17:00:23.765364    7783 kapi.go:214] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0417 17:00:23.765420    7783 start.go:246] waiting for cluster config update ...
I0417 17:00:23.765461    7783 start.go:255] writing updated cluster config ...
I0417 17:00:23.767066    7783 ssh_runner.go:195] Run: rm -f paused
I0417 17:00:24.032496    7783 start.go:600] kubectl: 1.32.3, cluster: 1.32.0 (minor skew: 0)
I0417 17:00:24.036170    7783 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


==> Docker <==
Apr 17 07:10:45 minikube dockerd[1745]: time="2025-04-17T07:10:45.059205211Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 07:10:45 minikube dockerd[1745]: time="2025-04-17T07:10:45.059347461Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 07:10:57 minikube dockerd[1745]: time="2025-04-17T07:10:57.728492384Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 07:10:57 minikube dockerd[1745]: time="2025-04-17T07:10:57.728613134Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 09:10:51 minikube dockerd[1745]: time="2025-04-17T09:10:51.314448967Z" level=warning msg="Error getting v2 registry: Get \"https://registry-1.docker.io/v2/\": dial tcp: lookup registry-1.docker.io on 192.168.65.254:53: no such host"
Apr 17 09:10:51 minikube dockerd[1745]: time="2025-04-17T09:10:51.314510300Z" level=info msg="Attempting next endpoint for pull after error: Get \"https://registry-1.docker.io/v2/\": dial tcp: lookup registry-1.docker.io on 192.168.65.254:53: no such host"
Apr 17 09:10:51 minikube dockerd[1745]: time="2025-04-17T09:10:51.315951925Z" level=error msg="Handler for POST /v1.43/images/create returned error: Get \"https://registry-1.docker.io/v2/\": dial tcp: lookup registry-1.docker.io on 192.168.65.254:53: no such host"
Apr 17 10:18:20 minikube dockerd[1745]: time="2025-04-17T10:18:20.429388709Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:18:20 minikube dockerd[1745]: time="2025-04-17T10:18:20.429422167Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:18:35 minikube dockerd[1745]: time="2025-04-17T10:18:35.701675549Z" level=error msg="Not continuing with pull after error: errors:\nunauthorized: authentication required\nunauthorized: authentication required\n"
Apr 17 10:18:35 minikube dockerd[1745]: time="2025-04-17T10:18:35.701804716Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:18:35 minikube dockerd[1745]: time="2025-04-17T10:18:35.704112966Z" level=error msg="Handler for POST /v1.43/images/create returned error: unauthorized: authentication required"
Apr 17 10:42:34 minikube dockerd[1745]: time="2025-04-17T10:42:34.353955506Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:42:34 minikube dockerd[1745]: time="2025-04-17T10:42:34.354079089Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:42:43 minikube dockerd[1745]: time="2025-04-17T10:42:43.373332052Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:42:43 minikube dockerd[1745]: time="2025-04-17T10:42:43.373382385Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:42:58 minikube dockerd[1745]: time="2025-04-17T10:42:58.634313587Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:42:58 minikube dockerd[1745]: time="2025-04-17T10:42:58.634377337Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:47:45 minikube dockerd[1745]: time="2025-04-17T10:47:45.561119636Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:47:45 minikube dockerd[1745]: time="2025-04-17T10:47:45.561207636Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:47:56 minikube dockerd[1745]: time="2025-04-17T10:47:56.517442377Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:47:56 minikube dockerd[1745]: time="2025-04-17T10:47:56.517477336Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:48:12 minikube dockerd[1745]: time="2025-04-17T10:48:12.538696052Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:48:12 minikube dockerd[1745]: time="2025-04-17T10:48:12.538779510Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:53:00 minikube dockerd[1745]: time="2025-04-17T10:53:00.702806754Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:53:00 minikube dockerd[1745]: time="2025-04-17T10:53:00.702910754Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:53:03 minikube dockerd[1745]: time="2025-04-17T10:53:03.874216714Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:53:03 minikube dockerd[1745]: time="2025-04-17T10:53:03.874343589Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:53:23 minikube dockerd[1745]: time="2025-04-17T10:53:23.220626542Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:53:23 minikube dockerd[1745]: time="2025-04-17T10:53:23.220754376Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:58:13 minikube dockerd[1745]: time="2025-04-17T10:58:13.589297219Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:58:13 minikube dockerd[1745]: time="2025-04-17T10:58:13.589474469Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:58:17 minikube dockerd[1745]: time="2025-04-17T10:58:17.171687970Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:58:17 minikube dockerd[1745]: time="2025-04-17T10:58:17.171811804Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 10:58:35 minikube dockerd[1745]: time="2025-04-17T10:58:35.180360590Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 10:58:35 minikube dockerd[1745]: time="2025-04-17T10:58:35.180463131Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 11:35:33 minikube dockerd[1745]: time="2025-04-17T11:35:33.013856625Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 11:35:33 minikube dockerd[1745]: time="2025-04-17T11:35:33.013901875Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 11:35:36 minikube dockerd[1745]: time="2025-04-17T11:35:36.546102085Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 11:35:36 minikube dockerd[1745]: time="2025-04-17T11:35:36.546248294Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 11:36:00 minikube dockerd[1745]: time="2025-04-17T11:36:00.355135180Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 11:36:00 minikube dockerd[1745]: time="2025-04-17T11:36:00.355228763Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 11:36:17 minikube dockerd[1745]: time="2025-04-17T11:36:17.523072924Z" level=info msg="ignoring event" container=78ad272b6f9c89d212dc36c413a4973786178396ba3b600a8117147941065943 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Apr 17 11:36:17 minikube dockerd[1745]: time="2025-04-17T11:36:17.563108049Z" level=info msg="ignoring event" container=5564f30d8d65d3d209ea46c0de55ad8884ee68a8303dad2980579fc509483681 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Apr 17 11:36:17 minikube dockerd[1745]: time="2025-04-17T11:36:17.586563049Z" level=info msg="ignoring event" container=42b2ec29c6d0c7bafcc7e1f194dcb20afd19a2fbab6ccf038b04fbf3a5cc43cc module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Apr 17 11:36:18 minikube cri-dockerd[2112]: time="2025-04-17T11:36:18Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/b49f4c8fe2dadf24434e51efe700706ceb68f9a797efba0ee6227276af53b5e3/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Apr 17 11:36:18 minikube cri-dockerd[2112]: time="2025-04-17T11:36:18Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/20387a45aef2db87215cd1eac31e2c1ff62b6a6fcbefcbe72b38da34aebe2d3a/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Apr 17 11:36:18 minikube cri-dockerd[2112]: time="2025-04-17T11:36:18Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/b35cf40b33eb16bd741e3dc1e325a3c2d16d2e5c016d6e0fcfdcd0886eaa936a/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Apr 17 11:36:21 minikube dockerd[1745]: time="2025-04-17T11:36:21.318355426Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 11:36:21 minikube dockerd[1745]: time="2025-04-17T11:36:21.318495301Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 11:36:24 minikube dockerd[1745]: time="2025-04-17T11:36:24.465503969Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 11:36:24 minikube dockerd[1745]: time="2025-04-17T11:36:24.465581802Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 11:36:27 minikube dockerd[1745]: time="2025-04-17T11:36:27.797977804Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 11:36:27 minikube dockerd[1745]: time="2025-04-17T11:36:27.798084054Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 11:36:38 minikube dockerd[1745]: time="2025-04-17T11:36:38.929699670Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 11:36:38 minikube dockerd[1745]: time="2025-04-17T11:36:38.929875420Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 11:36:45 minikube dockerd[1745]: time="2025-04-17T11:36:45.622763340Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 11:36:45 minikube dockerd[1745]: time="2025-04-17T11:36:45.622885840Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 17 11:36:48 minikube dockerd[1745]: time="2025-04-17T11:36:48.920816091Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 17 11:36:48 minikube dockerd[1745]: time="2025-04-17T11:36:48.920867841Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"


==> container status <==
CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
dd97c837adb65       ba04bb24b9575       5 hours ago         Running             storage-provisioner       1                   cd0727a9a5418       storage-provisioner
fa4958ca75645       2f6c962e7b831       5 hours ago         Running             coredns                   0                   d736b8c9c9c52       coredns-668d6bf9bc-pmkvz
7f8f1e224261a       2f50386e20bfd       5 hours ago         Running             kube-proxy                0                   c0396e71c61ec       kube-proxy-dmbq2
5aaeb76bd9b69       ba04bb24b9575       5 hours ago         Exited              storage-provisioner       0                   cd0727a9a5418       storage-provisioner
44febcb4ba32b       2b5bd0f16085a       5 hours ago         Running             kube-apiserver            0                   a01f8f5f8ab72       kube-apiserver-minikube
fcdb2c2ac25fe       a8d049396f6b8       5 hours ago         Running             kube-controller-manager   0                   ef1f53f01915e       kube-controller-manager-minikube
3af047f76e8a9       c3ff26fb59f37       5 hours ago         Running             kube-scheduler            0                   7be027f6809e9       kube-scheduler-minikube
c19bd6194b133       7fc9d4aa817aa       5 hours ago         Running             etcd                      0                   e9b55c8c47de3       etcd-minikube


==> coredns [fa4958ca7564] <==
.:53
[INFO] plugin/reload: Running configuration SHA512 = e7e8a6c4578bf29b9f453cb54ade3fb14671793481527b7435e35119b25e84eb3a79242b1f470199f8605ace441674db8f1b6715b77448c20dde63e2dc5d2169
CoreDNS-1.11.3
linux/arm64, go1.21.11, a6338e9
[INFO] 127.0.0.1:55776 - 9625 "HINFO IN 5374480152677571069.5805569737901047904. udp 57 false 512" NXDOMAIN qr,rd,ra 57 0.052893917s


==> describe nodes <==
Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=arm64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=arm64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=dd5d320e41b5451cdf3c01891bc4e13d189586ed-dirty
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2025_04_17T17_00_23_0700
                    minikube.k8s.io/version=v1.35.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Thu, 17 Apr 2025 07:00:20 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Thu, 17 Apr 2025 11:36:50 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Thu, 17 Apr 2025 11:25:13 +0000   Thu, 17 Apr 2025 07:00:19 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Thu, 17 Apr 2025 11:25:13 +0000   Thu, 17 Apr 2025 07:00:19 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Thu, 17 Apr 2025 11:25:13 +0000   Thu, 17 Apr 2025 07:00:19 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Thu, 17 Apr 2025 11:25:13 +0000   Thu, 17 Apr 2025 07:00:21 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                11
  ephemeral-storage:  61202244Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             8025284Ki
  pods:               110
Allocatable:
  cpu:                11
  ephemeral-storage:  61202244Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             8025284Ki
  pods:               110
System Info:
  Machine ID:                 c55c9705cf914fbab96efd08933fd24d
  System UUID:                c55c9705cf914fbab96efd08933fd24d
  Boot ID:                    05758072-41fd-4a3d-ad3f-fd0b3404565a
  Kernel Version:             6.10.14-linuxkit
  OS Image:                   Ubuntu 22.04.5 LTS
  Operating System:           linux
  Architecture:               arm64
  Container Runtime Version:  docker://27.4.1
  Kubelet Version:            v1.32.0
  Kube-Proxy Version:         v1.32.0
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (10 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  default                     calculator-app-7849467997-gtttt     200m (1%)     500m (4%)   256Mi (3%)       512Mi (6%)     36s
  default                     calculator-app-7849467997-k52zv     200m (1%)     500m (4%)   256Mi (3%)       512Mi (6%)     36s
  default                     calculator-app-7849467997-v7dq5     200m (1%)     500m (4%)   256Mi (3%)       512Mi (6%)     36s
  kube-system                 coredns-668d6bf9bc-pmkvz            100m (0%)     0 (0%)      70Mi (0%)        170Mi (2%)     4h36m
  kube-system                 etcd-minikube                       100m (0%)     0 (0%)      100Mi (1%)       0 (0%)         4h36m
  kube-system                 kube-apiserver-minikube             250m (2%)     0 (0%)      0 (0%)           0 (0%)         4h36m
  kube-system                 kube-controller-manager-minikube    200m (1%)     0 (0%)      0 (0%)           0 (0%)         4h36m
  kube-system                 kube-proxy-dmbq2                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         4h36m
  kube-system                 kube-scheduler-minikube             100m (0%)     0 (0%)      0 (0%)           0 (0%)         4h36m
  kube-system                 storage-provisioner                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         4h36m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests     Limits
  --------           --------     ------
  cpu                1350m (12%)  1500m (13%)
  memory             938Mi (11%)  1706Mi (21%)
  ephemeral-storage  0 (0%)       0 (0%)
  hugepages-1Gi      0 (0%)       0 (0%)
  hugepages-2Mi      0 (0%)       0 (0%)
  hugepages-32Mi     0 (0%)       0 (0%)
  hugepages-64Ki     0 (0%)       0 (0%)
Events:
  Type    Reason                   Age    From             Message
  ----    ------                   ----   ----             -------
  Normal  Starting                 4h36m  kube-proxy       
  Normal  Starting                 4h36m  kubelet          Starting kubelet.
  Normal  NodeAllocatableEnforced  4h36m  kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  4h36m  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    4h36m  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     4h36m  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  RegisteredNode           4h36m  node-controller  Node minikube event: Registered Node minikube in Controller


==> dmesg <==
[Apr17 10:57] netlink: 'init': attribute type 4 has an invalid length.
[  +0.022510] fakeowner: loading out-of-tree module taints kernel.
[ +13.804926] overlayfs: upperdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.000006] overlayfs: workdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.


==> etcd [c19bd6194b13] <==
{"level":"info","ts":"2025-04-17T07:00:18.644140Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2025-04-17T07:00:18.644164Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2025-04-17T07:00:18.645478Z","caller":"auth/store.go:1241","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2025-04-17T07:00:18.645832Z","caller":"mvcc/kvstore.go:423","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2025-04-17T07:00:18.646207Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2025-04-17T07:00:18.646771Z","caller":"etcdserver/server.go:873","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.16","cluster-version":"to_be_decided"}
{"level":"info","ts":"2025-04-17T07:00:18.646965Z","caller":"etcdserver/server.go:757","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2025-04-17T07:00:18.647034Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2025-04-17T07:00:18.647068Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2025-04-17T07:00:18.647075Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2025-04-17T07:00:18.647053Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-04-17T07:00:18.647380Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2025-04-17T07:00:18.648362Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2025-04-17T07:00:18.649419Z","caller":"embed/etcd.go:729","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-04-17T07:00:18.649588Z","caller":"embed/etcd.go:280","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2025-04-17T07:00:18.649613Z","caller":"embed/etcd.go:871","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2025-04-17T07:00:18.649685Z","caller":"embed/etcd.go:600","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2025-04-17T07:00:18.649702Z","caller":"embed/etcd.go:572","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2025-04-17T07:00:18.846077Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2025-04-17T07:00:18.846119Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2025-04-17T07:00:18.846155Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2025-04-17T07:00:18.846171Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2025-04-17T07:00:18.846175Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2025-04-17T07:00:18.846181Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2025-04-17T07:00:18.846186Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2025-04-17T07:00:18.847249Z","caller":"etcdserver/server.go:2140","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2025-04-17T07:00:18.847541Z","caller":"etcdserver/server.go:2651","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2025-04-17T07:00:18.847887Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-04-17T07:00:18.848043Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-04-17T07:00:18.848059Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2025-04-17T07:00:18.848108Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2025-04-17T07:00:18.848131Z","caller":"etcdserver/server.go:2675","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2025-04-17T07:00:18.848123Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2025-04-17T07:00:18.848161Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2025-04-17T07:00:18.848664Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-04-17T07:00:18.848712Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-04-17T07:00:18.849132Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}
{"level":"info","ts":"2025-04-17T07:00:18.849389Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2025-04-17T07:10:19.451777Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":718}
{"level":"info","ts":"2025-04-17T07:10:19.457755Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":718,"took":"5.439167ms","hash":2671683457,"current-db-size-bytes":2244608,"current-db-size":"2.2 MB","current-db-size-in-use-bytes":2244608,"current-db-size-in-use":"2.2 MB"}
{"level":"info","ts":"2025-04-17T07:10:19.457806Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":2671683457,"revision":718,"compact-revision":-1}
{"level":"info","ts":"2025-04-17T09:10:41.439593Z","caller":"traceutil/trace.go:171","msg":"trace[1535736206] transaction","detail":"{read_only:false; response_revision:1284; number_of_response:1; }","duration":"101.776042ms","start":"2025-04-17T09:10:41.337090Z","end":"2025-04-17T09:10:41.438866Z","steps":["trace[1535736206] 'process raft request'  (duration: 101.524292ms)"],"step_count":1}
{"level":"info","ts":"2025-04-17T10:18:34.430890Z","caller":"traceutil/trace.go:171","msg":"trace[1920753948] transaction","detail":"{read_only:false; response_revision:1329; number_of_response:1; }","duration":"122.686291ms","start":"2025-04-17T10:18:34.308191Z","end":"2025-04-17T10:18:34.430878Z","steps":["trace[1920753948] 'process raft request'  (duration: 122.48125ms)"],"step_count":1}
{"level":"info","ts":"2025-04-17T10:18:34.444333Z","caller":"traceutil/trace.go:171","msg":"trace[916600944] transaction","detail":"{read_only:false; response_revision:1330; number_of_response:1; }","duration":"133.147958ms","start":"2025-04-17T10:18:34.311170Z","end":"2025-04-17T10:18:34.444318Z","steps":["trace[916600944] 'process raft request'  (duration: 132.866583ms)"],"step_count":1}
{"level":"info","ts":"2025-04-17T10:43:01.329013Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1164}
{"level":"info","ts":"2025-04-17T10:43:01.332876Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":1164,"took":"3.331958ms","hash":4047472899,"current-db-size-bytes":2244608,"current-db-size":"2.2 MB","current-db-size-in-use-bytes":1835008,"current-db-size-in-use":"1.8 MB"}
{"level":"info","ts":"2025-04-17T10:43:01.332938Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":4047472899,"revision":1164,"compact-revision":718}
{"level":"info","ts":"2025-04-17T10:48:01.342961Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1528}
{"level":"info","ts":"2025-04-17T10:48:01.349707Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":1528,"took":"6.199083ms","hash":1562016633,"current-db-size-bytes":2244608,"current-db-size":"2.2 MB","current-db-size-in-use-bytes":1363968,"current-db-size-in-use":"1.4 MB"}
{"level":"info","ts":"2025-04-17T10:48:01.349775Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":1562016633,"revision":1528,"compact-revision":1164}
{"level":"info","ts":"2025-04-17T10:53:01.352271Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1779}
{"level":"info","ts":"2025-04-17T10:53:01.355111Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":1779,"took":"2.283375ms","hash":3211547921,"current-db-size-bytes":2244608,"current-db-size":"2.2 MB","current-db-size-in-use-bytes":1134592,"current-db-size-in-use":"1.1 MB"}
{"level":"info","ts":"2025-04-17T10:53:01.355164Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":3211547921,"revision":1779,"compact-revision":1528}
{"level":"info","ts":"2025-04-17T10:58:01.363192Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2030}
{"level":"info","ts":"2025-04-17T10:58:01.365276Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2030,"took":"1.725291ms","hash":873556123,"current-db-size-bytes":2244608,"current-db-size":"2.2 MB","current-db-size-in-use-bytes":1134592,"current-db-size-in-use":"1.1 MB"}
{"level":"info","ts":"2025-04-17T10:58:01.365342Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":873556123,"revision":2030,"compact-revision":1779}
{"level":"info","ts":"2025-04-17T10:58:30.488606Z","caller":"traceutil/trace.go:171","msg":"trace[535987098] transaction","detail":"{read_only:false; response_revision:2306; number_of_response:1; }","duration":"111.916ms","start":"2025-04-17T10:58:30.376679Z","end":"2025-04-17T10:58:30.488595Z","steps":["trace[535987098] 'process raft request'  (duration: 111.623125ms)"],"step_count":1}
{"level":"info","ts":"2025-04-17T11:35:11.950565Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2281}
{"level":"info","ts":"2025-04-17T11:35:11.952800Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2281,"took":"1.826916ms","hash":2634292251,"current-db-size-bytes":2244608,"current-db-size":"2.2 MB","current-db-size-in-use-bytes":1126400,"current-db-size-in-use":"1.1 MB"}
{"level":"info","ts":"2025-04-17T11:35:11.952838Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":2634292251,"revision":2281,"compact-revision":2030}


==> kernel <==
 11:36:53 up 39 min,  0 users,  load average: 3.98, 3.93, 3.47
Linux minikube 6.10.14-linuxkit #1 SMP Mon Feb 24 16:35:16 UTC 2025 aarch64 aarch64 aarch64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.5 LTS"


==> kube-apiserver [44febcb4ba32] <==
I0417 07:00:20.115206       1 controller.go:90] Starting OpenAPI V3 controller
I0417 07:00:20.115217       1 naming_controller.go:294] Starting NamingConditionController
I0417 07:00:20.115222       1 establishing_controller.go:81] Starting EstablishingController
I0417 07:00:20.115224       1 remote_available_controller.go:411] Starting RemoteAvailability controller
I0417 07:00:20.125210       1 cache.go:32] Waiting for caches to sync for RemoteAvailability controller
I0417 07:00:20.115237       1 nonstructuralschema_controller.go:195] Starting NonStructuralSchemaConditionController
I0417 07:00:20.115244       1 apiapproval_controller.go:189] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0417 07:00:20.115254       1 crdregistration_controller.go:114] Starting crd-autoregister controller
I0417 07:00:20.125222       1 shared_informer.go:313] Waiting for caches to sync for crd-autoregister
I0417 07:00:20.115262       1 crd_finalizer.go:269] Starting CRDFinalizer
I0417 07:00:20.120230       1 cluster_authentication_trust_controller.go:462] Starting cluster_authentication_trust_controller controller
I0417 07:00:20.125264       1 shared_informer.go:313] Waiting for caches to sync for cluster_authentication_trust_controller
I0417 07:00:20.120447       1 controller.go:119] Starting legacy_token_tracking_controller
I0417 07:00:20.125277       1 shared_informer.go:313] Waiting for caches to sync for configmaps
I0417 07:00:20.120472       1 controller.go:78] Starting OpenAPI AggregationController
I0417 07:00:20.120534       1 local_available_controller.go:156] Starting LocalAvailability controller
I0417 07:00:20.125403       1 cache.go:32] Waiting for caches to sync for LocalAvailability controller
I0417 07:00:20.120574       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0417 07:00:20.220720       1 shared_informer.go:320] Caches are synced for node_authorizer
I0417 07:00:20.226028       1 shared_informer.go:320] Caches are synced for *generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]
I0417 07:00:20.226050       1 shared_informer.go:320] Caches are synced for crd-autoregister
I0417 07:00:20.226053       1 policy_source.go:240] refreshing policies
I0417 07:00:20.226075       1 shared_informer.go:320] Caches are synced for cluster_authentication_trust_controller
I0417 07:00:20.226093       1 aggregator.go:171] initial CRD sync complete...
I0417 07:00:20.226111       1 apf_controller.go:382] Running API Priority and Fairness config worker
I0417 07:00:20.226123       1 apf_controller.go:385] Running API Priority and Fairness periodic rebalancing process
I0417 07:00:20.226126       1 autoregister_controller.go:144] Starting autoregister controller
I0417 07:00:20.226135       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0417 07:00:20.226159       1 cache.go:39] Caches are synced for autoregister controller
I0417 07:00:20.226037       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0417 07:00:20.226101       1 cache.go:39] Caches are synced for LocalAvailability controller
I0417 07:00:20.226212       1 cache.go:39] Caches are synced for RemoteAvailability controller
I0417 07:00:20.226225       1 handler_discovery.go:451] Starting ResourceDiscoveryManager
I0417 07:00:20.226094       1 shared_informer.go:320] Caches are synced for configmaps
I0417 07:00:20.226577       1 controller.go:615] quota admission added evaluator for: namespaces
I0417 07:00:20.281223       1 controller.go:615] quota admission added evaluator for: leases.coordination.k8s.io
I0417 07:00:21.125334       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0417 07:00:21.128467       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0417 07:00:21.128490       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0417 07:00:21.281415       1 controller.go:615] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0417 07:00:21.292798       1 controller.go:615] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0417 07:00:21.320067       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0417 07:00:21.323663       1 lease.go:265] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0417 07:00:21.324107       1 controller.go:615] quota admission added evaluator for: endpoints
I0417 07:00:21.326787       1 controller.go:615] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0417 07:00:22.136135       1 controller.go:615] quota admission added evaluator for: serviceaccounts
I0417 07:00:22.385766       1 controller.go:615] quota admission added evaluator for: deployments.apps
I0417 07:00:22.389370       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0417 07:00:22.393402       1 controller.go:615] quota admission added evaluator for: daemonsets.apps
I0417 07:00:27.542365       1 controller.go:615] quota admission added evaluator for: controllerrevisions.apps
I0417 07:00:27.587508       1 controller.go:615] quota admission added evaluator for: replicasets.apps
I0417 07:03:16.927720       1 alloc.go:330] "allocated clusterIPs" service="default/calculator-app-service" clusterIPs={"IPv4":"10.96.170.237"}
E0417 09:10:50.998793       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"
E0417 09:10:50.999165       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"
E0417 10:40:46.855062       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"
E0417 11:24:29.814328       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"
E0417 11:24:29.815163       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"
E0417 11:36:17.284119       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"
E0417 11:36:17.284606       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"
E0417 11:36:17.606623       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"


==> kube-controller-manager [fcdb2c2ac25f] <==
I0417 10:18:21.141866       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="78.666µs"
I0417 10:18:34.450323       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="69.75µs"
I0417 10:18:34.469426       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="30.333µs"
I0417 10:18:45.142444       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="276.583µs"
I0417 10:18:47.144846       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="212.209µs"
I0417 10:40:30.005152       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="70.958µs"
I0417 10:42:47.027098       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="115.167µs"
I0417 10:42:55.028299       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="123.833µs"
I0417 10:43:02.032546       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="134.167µs"
I0417 10:43:10.017522       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="80.042µs"
I0417 10:43:12.023520       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="146.583µs"
I0417 10:43:24.026786       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="83.709µs"
I0417 10:44:33.972215       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0417 10:47:56.027354       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="128.084µs"
I0417 10:48:09.021614       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="52.5µs"
I0417 10:48:12.030260       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="123.833µs"
I0417 10:48:26.028019       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="178.208µs"
I0417 10:48:27.026864       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="131.5µs"
I0417 10:48:39.021720       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="136.75µs"
I0417 10:49:40.563255       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0417 10:53:14.028789       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="96.333µs"
I0417 10:53:19.029957       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="141.625µs"
I0417 10:53:25.030290       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="121.5µs"
I0417 10:53:33.029866       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="118.084µs"
I0417 10:53:38.031271       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="107.292µs"
I0417 10:53:51.030836       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="94.209µs"
I0417 10:54:46.518435       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0417 10:58:29.028766       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="96.5µs"
I0417 10:58:32.035999       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="122.834µs"
I0417 10:58:41.031399       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="84.208µs"
I0417 10:58:43.019088       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="66.333µs"
I0417 10:58:48.022421       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="47.542µs"
I0417 11:24:19.848516       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="120.667µs"
E0417 11:24:29.815261       1 resource_quota_controller.go:446] "Unhandled Error" err="failed to discover resources: the server has asked for the client to provide credentials" logger="UnhandledError"
I0417 11:24:29.815999       1 garbagecollector.go:789] "failed to discover preferred resources" logger="garbage-collector-controller" error="the server has asked for the client to provide credentials"
I0417 11:25:13.153145       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0417 11:35:45.614509       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="177.5µs"
I0417 11:35:50.612689       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="154.792µs"
I0417 11:35:56.615323       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="74.042µs"
I0417 11:36:02.616728       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="86.834µs"
I0417 11:36:15.615271       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="93.792µs"
I0417 11:36:17.280604       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7747794444" duration="2.875µs"
I0417 11:36:17.285031       1 endpointslice_controller.go:344] "Error syncing endpoint slices for service, retrying" logger="endpointslice-controller" key="default/calculator-app-service" err="failed to update calculator-app-service-fwn7n EndpointSlice for Service default/calculator-app-service: Unauthorized"
I0417 11:36:17.285128       1 event.go:377] Event(v1.ObjectReference{Kind:"Service", Namespace:"default", Name:"calculator-app-service", UID:"dcf4cc53-3fde-4336-b249-1235b95f2ad1", APIVersion:"v1", ResourceVersion:"539", FieldPath:""}): type: 'Warning' reason: 'FailedToUpdateEndpointSlices' Error updating Endpoint Slices for Service default/calculator-app-service: failed to update calculator-app-service-fwn7n EndpointSlice for Service default/calculator-app-service: Unauthorized
I0417 11:36:17.614599       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="8.456708ms"
E0417 11:36:17.614630       1 replica_set.go:560] "Unhandled Error" err="sync \"default/calculator-app-7849467997\" failed with Unauthorized" logger="UnhandledError"
I0417 11:36:17.626918       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="10.917333ms"
I0417 11:36:17.630437       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="3.481375ms"
I0417 11:36:17.630488       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="29.792µs"
I0417 11:36:17.630652       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="11.792µs"
I0417 11:36:17.634586       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="41.875µs"
I0417 11:36:17.637999       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="91.75µs"
I0417 11:36:18.002986       1 endpointslice_controller.go:344] "Error syncing endpoint slices for service, retrying" logger="endpointslice-controller" key="default/calculator-app-service" err="EndpointSlice informer cache is out of date"
I0417 11:36:22.034992       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="67.292µs"
I0417 11:36:25.068536       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="102.125µs"
I0417 11:36:28.097745       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="70.042µs"
I0417 11:36:35.615103       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="50.833µs"
I0417 11:36:39.606485       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="54.667µs"
I0417 11:36:40.603488       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="143.083µs"
I0417 11:36:50.607140       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/calculator-app-7849467997" duration="84.5µs"


==> kube-proxy [7f8f1e224261] <==
I0417 07:00:28.058428       1 server_linux.go:66] "Using iptables proxy"
I0417 07:00:28.145415       1 server.go:698] "Successfully retrieved node IP(s)" IPs=["192.168.49.2"]
E0417 07:00:28.145464       1 server.go:234] "Kube-proxy configuration may be incomplete or incorrect" err="nodePortAddresses is unset; NodePort connections will be accepted on all local IPs. Consider using `--nodeport-addresses primary`"
I0417 07:00:28.153668       1 server.go:243] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0417 07:00:28.153693       1 server_linux.go:170] "Using iptables Proxier"
I0417 07:00:28.154576       1 proxier.go:255] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses" ipFamily="IPv4"
I0417 07:00:28.154815       1 server.go:497] "Version info" version="v1.32.0"
I0417 07:00:28.154828       1 server.go:499] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0417 07:00:28.155707       1 config.go:199] "Starting service config controller"
I0417 07:00:28.155750       1 shared_informer.go:313] Waiting for caches to sync for service config
I0417 07:00:28.155784       1 config.go:105] "Starting endpoint slice config controller"
I0417 07:00:28.155792       1 shared_informer.go:313] Waiting for caches to sync for endpoint slice config
I0417 07:00:28.155996       1 config.go:329] "Starting node config controller"
I0417 07:00:28.156007       1 shared_informer.go:313] Waiting for caches to sync for node config
I0417 07:00:28.257046       1 shared_informer.go:320] Caches are synced for endpoint slice config
I0417 07:00:28.257061       1 shared_informer.go:320] Caches are synced for service config
I0417 07:00:28.257079       1 shared_informer.go:320] Caches are synced for node config


==> kube-scheduler [3af047f76e8a] <==
I0417 07:00:18.834485       1 serving.go:386] Generated self-signed cert in-memory
W0417 07:00:20.135187       1 requestheader_controller.go:204] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0417 07:00:20.135217       1 authentication.go:397] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0417 07:00:20.135225       1 authentication.go:398] Continuing without authentication configuration. This may treat all requests as anonymous.
W0417 07:00:20.135231       1 authentication.go:399] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0417 07:00:20.204722       1 server.go:166] "Starting Kubernetes Scheduler" version="v1.32.0"
I0417 07:00:20.204737       1 server.go:168] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0417 07:00:20.205876       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
I0417 07:00:20.205962       1 configmap_cafile_content.go:205] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0417 07:00:20.205991       1 shared_informer.go:313] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0417 07:00:20.206004       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
W0417 07:00:20.207015       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0417 07:00:20.207042       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0417 07:00:20.207045       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
E0417 07:00:20.207059       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207131       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0417 07:00:20.207154       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207161       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0417 07:00:20.207181       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207207       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0417 07:00:20.207224       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207248       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0417 07:00:20.207253       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207290       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0417 07:00:20.207307       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0417 07:00:20.207308       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207308       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "volumeattachments" in API group "storage.k8s.io" at the cluster scope
E0417 07:00:20.207316       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError"
E0417 07:00:20.207327       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.VolumeAttachment: failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207338       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0417 07:00:20.207352       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0417 07:00:20.207353       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207361       1 reflector.go:569] runtime/asm_arm64.s:1223: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0417 07:00:20.207377       1 reflector.go:166] "Unhandled Error" err="runtime/asm_arm64.s:1223: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError"
E0417 07:00:20.207360       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207413       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0417 07:00:20.207423       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207509       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0417 07:00:20.207524       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207576       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0417 07:00:20.207593       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0417 07:00:20.207627       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0417 07:00:20.207636       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0417 07:00:21.041476       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0417 07:00:21.041577       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0417 07:00:21.083250       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0417 07:00:21.083325       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0417 07:00:21.086386       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0417 07:00:21.086435       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError"
W0417 07:00:21.103048       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0417 07:00:21.103169       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0417 07:00:21.103236       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0417 07:00:21.103343       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0417 07:00:21.262481       1 reflector.go:569] runtime/asm_arm64.s:1223: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0417 07:00:21.262508       1 reflector.go:166] "Unhandled Error" err="runtime/asm_arm64.s:1223: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError"
I0417 07:00:22.910844       1 shared_informer.go:320] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file


==> kubelet <==
Apr 17 11:35:33 minikube kubelet[3372]: E0417 11:35:33.020611    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ErrImagePull: \"Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7747794444-c2ttb" podUID="6f079438-163a-4293-8b5d-0337c3d67a53"
Apr 17 11:35:36 minikube kubelet[3372]: E0417 11:35:36.553663    3372 log.go:32] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:35:36 minikube kubelet[3372]: E0417 11:35:36.553840    3372 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:35:36 minikube kubelet[3372]: E0417 11:35:36.554202    3372 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:calculator-app,Image:calculator-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:3000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{cpu: {{500 -3} {<nil>} 500m DecimalSI},memory: {{536870912 0} {<nil>}  BinarySI},},Requests:ResourceList{cpu: {{200 -3} {<nil>} 200m DecimalSI},memory: {{268435456 0} {<nil>}  BinarySI},},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wqbzk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:15,TimeoutSeconds:1,PeriodSeconds:20,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:5,TimeoutSeconds:1,PeriodSeconds:10,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod calculator-app-7747794444-9p8t5_default(f4b73ace-45a5-405d-9305-3a50c78cdcb6): ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" logger="UnhandledError"
Apr 17 11:35:36 minikube kubelet[3372]: E0417 11:35:36.556167    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ErrImagePull: \"Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7747794444-9p8t5" podUID="f4b73ace-45a5-405d-9305-3a50c78cdcb6"
Apr 17 11:35:43 minikube kubelet[3372]: E0417 11:35:43.597433    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7747794444-bx48b" podUID="bad1ce3f-c22f-4556-abd6-d536fa4311ec"
Apr 17 11:35:45 minikube kubelet[3372]: E0417 11:35:45.597479    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7747794444-c2ttb" podUID="6f079438-163a-4293-8b5d-0337c3d67a53"
Apr 17 11:35:50 minikube kubelet[3372]: E0417 11:35:50.597839    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7747794444-9p8t5" podUID="f4b73ace-45a5-405d-9305-3a50c78cdcb6"
Apr 17 11:35:56 minikube kubelet[3372]: E0417 11:35:56.599056    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7747794444-c2ttb" podUID="6f079438-163a-4293-8b5d-0337c3d67a53"
Apr 17 11:36:00 minikube kubelet[3372]: E0417 11:36:00.360440    3372 log.go:32] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:00 minikube kubelet[3372]: E0417 11:36:00.360575    3372 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:00 minikube kubelet[3372]: E0417 11:36:00.360888    3372 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:calculator-app,Image:calculator-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:3000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{cpu: {{500 -3} {<nil>} 500m DecimalSI},memory: {{536870912 0} {<nil>}  BinarySI},},Requests:ResourceList{cpu: {{200 -3} {<nil>} 200m DecimalSI},memory: {{268435456 0} {<nil>}  BinarySI},},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mf768,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:15,TimeoutSeconds:1,PeriodSeconds:20,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:5,TimeoutSeconds:1,PeriodSeconds:10,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod calculator-app-7747794444-bx48b_default(bad1ce3f-c22f-4556-abd6-d536fa4311ec): ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" logger="UnhandledError"
Apr 17 11:36:00 minikube kubelet[3372]: E0417 11:36:00.363288    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ErrImagePull: \"Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7747794444-bx48b" podUID="bad1ce3f-c22f-4556-abd6-d536fa4311ec"
Apr 17 11:36:02 minikube kubelet[3372]: E0417 11:36:02.600911    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7747794444-9p8t5" podUID="f4b73ace-45a5-405d-9305-3a50c78cdcb6"
Apr 17 11:36:11 minikube kubelet[3372]: E0417 11:36:11.596952    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7747794444-c2ttb" podUID="6f079438-163a-4293-8b5d-0337c3d67a53"
Apr 17 11:36:14 minikube kubelet[3372]: E0417 11:36:14.597296    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7747794444-9p8t5" podUID="f4b73ace-45a5-405d-9305-3a50c78cdcb6"
Apr 17 11:36:15 minikube kubelet[3372]: E0417 11:36:15.598654    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7747794444-bx48b" podUID="bad1ce3f-c22f-4556-abd6-d536fa4311ec"
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.640237    3372 reconciler_common.go:162] "operationExecutor.UnmountVolume started for volume \"kube-api-access-jq4vc\" (UniqueName: \"kubernetes.io/projected/6f079438-163a-4293-8b5d-0337c3d67a53-kube-api-access-jq4vc\") pod \"6f079438-163a-4293-8b5d-0337c3d67a53\" (UID: \"6f079438-163a-4293-8b5d-0337c3d67a53\") "
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.640552    3372 reconciler_common.go:162] "operationExecutor.UnmountVolume started for volume \"kube-api-access-mf768\" (UniqueName: \"kubernetes.io/projected/bad1ce3f-c22f-4556-abd6-d536fa4311ec-kube-api-access-mf768\") pod \"bad1ce3f-c22f-4556-abd6-d536fa4311ec\" (UID: \"bad1ce3f-c22f-4556-abd6-d536fa4311ec\") "
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.640606    3372 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-2bdh8\" (UniqueName: \"kubernetes.io/projected/64a67084-ff68-4be5-a8f3-79d4a2850c4f-kube-api-access-2bdh8\") pod \"calculator-app-7849467997-k52zv\" (UID: \"64a67084-ff68-4be5-a8f3-79d4a2850c4f\") " pod="default/calculator-app-7849467997-k52zv"
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.640624    3372 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-nrgcd\" (UniqueName: \"kubernetes.io/projected/ee9866a5-f235-449f-95df-b63c663a9571-kube-api-access-nrgcd\") pod \"calculator-app-7849467997-gtttt\" (UID: \"ee9866a5-f235-449f-95df-b63c663a9571\") " pod="default/calculator-app-7849467997-gtttt"
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.640642    3372 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-pn28p\" (UniqueName: \"kubernetes.io/projected/5ca52b84-1025-4495-853d-16abb9a3622b-kube-api-access-pn28p\") pod \"calculator-app-7849467997-v7dq5\" (UID: \"5ca52b84-1025-4495-853d-16abb9a3622b\") " pod="default/calculator-app-7849467997-v7dq5"
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.641677    3372 operation_generator.go:780] UnmountVolume.TearDown succeeded for volume "kubernetes.io/projected/bad1ce3f-c22f-4556-abd6-d536fa4311ec-kube-api-access-mf768" (OuterVolumeSpecName: "kube-api-access-mf768") pod "bad1ce3f-c22f-4556-abd6-d536fa4311ec" (UID: "bad1ce3f-c22f-4556-abd6-d536fa4311ec"). InnerVolumeSpecName "kube-api-access-mf768". PluginName "kubernetes.io/projected", VolumeGIDValue ""
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.641687    3372 operation_generator.go:780] UnmountVolume.TearDown succeeded for volume "kubernetes.io/projected/6f079438-163a-4293-8b5d-0337c3d67a53-kube-api-access-jq4vc" (OuterVolumeSpecName: "kube-api-access-jq4vc") pod "6f079438-163a-4293-8b5d-0337c3d67a53" (UID: "6f079438-163a-4293-8b5d-0337c3d67a53"). InnerVolumeSpecName "kube-api-access-jq4vc". PluginName "kubernetes.io/projected", VolumeGIDValue ""
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.741232    3372 reconciler_common.go:162] "operationExecutor.UnmountVolume started for volume \"kube-api-access-wqbzk\" (UniqueName: \"kubernetes.io/projected/f4b73ace-45a5-405d-9305-3a50c78cdcb6-kube-api-access-wqbzk\") pod \"f4b73ace-45a5-405d-9305-3a50c78cdcb6\" (UID: \"f4b73ace-45a5-405d-9305-3a50c78cdcb6\") "
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.741305    3372 reconciler_common.go:299] "Volume detached for volume \"kube-api-access-jq4vc\" (UniqueName: \"kubernetes.io/projected/6f079438-163a-4293-8b5d-0337c3d67a53-kube-api-access-jq4vc\") on node \"minikube\" DevicePath \"\""
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.741317    3372 reconciler_common.go:299] "Volume detached for volume \"kube-api-access-mf768\" (UniqueName: \"kubernetes.io/projected/bad1ce3f-c22f-4556-abd6-d536fa4311ec-kube-api-access-mf768\") on node \"minikube\" DevicePath \"\""
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.742794    3372 operation_generator.go:780] UnmountVolume.TearDown succeeded for volume "kubernetes.io/projected/f4b73ace-45a5-405d-9305-3a50c78cdcb6-kube-api-access-wqbzk" (OuterVolumeSpecName: "kube-api-access-wqbzk") pod "f4b73ace-45a5-405d-9305-3a50c78cdcb6" (UID: "f4b73ace-45a5-405d-9305-3a50c78cdcb6"). InnerVolumeSpecName "kube-api-access-wqbzk". PluginName "kubernetes.io/projected", VolumeGIDValue ""
Apr 17 11:36:17 minikube kubelet[3372]: I0417 11:36:17.841789    3372 reconciler_common.go:299] "Volume detached for volume \"kube-api-access-wqbzk\" (UniqueName: \"kubernetes.io/projected/f4b73ace-45a5-405d-9305-3a50c78cdcb6-kube-api-access-wqbzk\") on node \"minikube\" DevicePath \"\""
Apr 17 11:36:18 minikube kubelet[3372]: I0417 11:36:18.603773    3372 kubelet_volumes.go:163] "Cleaned up orphaned pod volumes dir" podUID="6f079438-163a-4293-8b5d-0337c3d67a53" path="/var/lib/kubelet/pods/6f079438-163a-4293-8b5d-0337c3d67a53/volumes"
Apr 17 11:36:18 minikube kubelet[3372]: I0417 11:36:18.604121    3372 kubelet_volumes.go:163] "Cleaned up orphaned pod volumes dir" podUID="bad1ce3f-c22f-4556-abd6-d536fa4311ec" path="/var/lib/kubelet/pods/bad1ce3f-c22f-4556-abd6-d536fa4311ec/volumes"
Apr 17 11:36:18 minikube kubelet[3372]: I0417 11:36:18.604331    3372 kubelet_volumes.go:163] "Cleaned up orphaned pod volumes dir" podUID="f4b73ace-45a5-405d-9305-3a50c78cdcb6" path="/var/lib/kubelet/pods/f4b73ace-45a5-405d-9305-3a50c78cdcb6/volumes"
Apr 17 11:36:21 minikube kubelet[3372]: E0417 11:36:21.323886    3372 log.go:32] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:21 minikube kubelet[3372]: E0417 11:36:21.324046    3372 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:21 minikube kubelet[3372]: E0417 11:36:21.324734    3372 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:calculator-app,Image:calculator-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:3001,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{cpu: {{500 -3} {<nil>} 500m DecimalSI},memory: {{536870912 0} {<nil>}  BinarySI},},Requests:ResourceList{cpu: {{200 -3} {<nil>} 200m DecimalSI},memory: {{268435456 0} {<nil>}  BinarySI},},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pn28p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:15,TimeoutSeconds:1,PeriodSeconds:20,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:5,TimeoutSeconds:1,PeriodSeconds:10,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod calculator-app-7849467997-v7dq5_default(5ca52b84-1025-4495-853d-16abb9a3622b): ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" logger="UnhandledError"
Apr 17 11:36:21 minikube kubelet[3372]: E0417 11:36:21.326042    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ErrImagePull: \"Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7849467997-v7dq5" podUID="5ca52b84-1025-4495-853d-16abb9a3622b"
Apr 17 11:36:22 minikube kubelet[3372]: E0417 11:36:22.025601    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7849467997-v7dq5" podUID="5ca52b84-1025-4495-853d-16abb9a3622b"
Apr 17 11:36:24 minikube kubelet[3372]: E0417 11:36:24.467323    3372 log.go:32] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:24 minikube kubelet[3372]: E0417 11:36:24.467391    3372 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:24 minikube kubelet[3372]: E0417 11:36:24.467671    3372 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:calculator-app,Image:calculator-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:3001,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{cpu: {{500 -3} {<nil>} 500m DecimalSI},memory: {{536870912 0} {<nil>}  BinarySI},},Requests:ResourceList{cpu: {{200 -3} {<nil>} 200m DecimalSI},memory: {{268435456 0} {<nil>}  BinarySI},},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2bdh8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:15,TimeoutSeconds:1,PeriodSeconds:20,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:5,TimeoutSeconds:1,PeriodSeconds:10,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod calculator-app-7849467997-k52zv_default(64a67084-ff68-4be5-a8f3-79d4a2850c4f): ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" logger="UnhandledError"
Apr 17 11:36:24 minikube kubelet[3372]: E0417 11:36:24.469891    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ErrImagePull: \"Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7849467997-k52zv" podUID="64a67084-ff68-4be5-a8f3-79d4a2850c4f"
Apr 17 11:36:25 minikube kubelet[3372]: E0417 11:36:25.053979    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7849467997-k52zv" podUID="64a67084-ff68-4be5-a8f3-79d4a2850c4f"
Apr 17 11:36:27 minikube kubelet[3372]: E0417 11:36:27.801771    3372 log.go:32] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:27 minikube kubelet[3372]: E0417 11:36:27.802009    3372 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:27 minikube kubelet[3372]: E0417 11:36:27.802450    3372 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:calculator-app,Image:calculator-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:3001,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{cpu: {{500 -3} {<nil>} 500m DecimalSI},memory: {{536870912 0} {<nil>}  BinarySI},},Requests:ResourceList{cpu: {{200 -3} {<nil>} 200m DecimalSI},memory: {{268435456 0} {<nil>}  BinarySI},},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nrgcd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:15,TimeoutSeconds:1,PeriodSeconds:20,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:5,TimeoutSeconds:1,PeriodSeconds:10,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod calculator-app-7849467997-gtttt_default(ee9866a5-f235-449f-95df-b63c663a9571): ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" logger="UnhandledError"
Apr 17 11:36:27 minikube kubelet[3372]: E0417 11:36:27.805022    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ErrImagePull: \"Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7849467997-gtttt" podUID="ee9866a5-f235-449f-95df-b63c663a9571"
Apr 17 11:36:28 minikube kubelet[3372]: E0417 11:36:28.084171    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7849467997-gtttt" podUID="ee9866a5-f235-449f-95df-b63c663a9571"
Apr 17 11:36:38 minikube kubelet[3372]: E0417 11:36:38.932692    3372 log.go:32] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:38 minikube kubelet[3372]: E0417 11:36:38.932770    3372 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:38 minikube kubelet[3372]: E0417 11:36:38.932942    3372 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:calculator-app,Image:calculator-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:3001,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{cpu: {{500 -3} {<nil>} 500m DecimalSI},memory: {{536870912 0} {<nil>}  BinarySI},},Requests:ResourceList{cpu: {{200 -3} {<nil>} 200m DecimalSI},memory: {{268435456 0} {<nil>}  BinarySI},},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pn28p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:15,TimeoutSeconds:1,PeriodSeconds:20,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:5,TimeoutSeconds:1,PeriodSeconds:10,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod calculator-app-7849467997-v7dq5_default(5ca52b84-1025-4495-853d-16abb9a3622b): ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" logger="UnhandledError"
Apr 17 11:36:38 minikube kubelet[3372]: E0417 11:36:38.934383    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ErrImagePull: \"Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7849467997-v7dq5" podUID="5ca52b84-1025-4495-853d-16abb9a3622b"
Apr 17 11:36:45 minikube kubelet[3372]: E0417 11:36:45.625966    3372 log.go:32] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:45 minikube kubelet[3372]: E0417 11:36:45.626108    3372 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:45 minikube kubelet[3372]: E0417 11:36:45.626624    3372 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:calculator-app,Image:calculator-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:3001,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{cpu: {{500 -3} {<nil>} 500m DecimalSI},memory: {{536870912 0} {<nil>}  BinarySI},},Requests:ResourceList{cpu: {{200 -3} {<nil>} 200m DecimalSI},memory: {{268435456 0} {<nil>}  BinarySI},},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2bdh8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:15,TimeoutSeconds:1,PeriodSeconds:20,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:5,TimeoutSeconds:1,PeriodSeconds:10,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod calculator-app-7849467997-k52zv_default(64a67084-ff68-4be5-a8f3-79d4a2850c4f): ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" logger="UnhandledError"
Apr 17 11:36:45 minikube kubelet[3372]: E0417 11:36:45.628353    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ErrImagePull: \"Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7849467997-k52zv" podUID="64a67084-ff68-4be5-a8f3-79d4a2850c4f"
Apr 17 11:36:48 minikube kubelet[3372]: E0417 11:36:48.923554    3372 log.go:32] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:48 minikube kubelet[3372]: E0417 11:36:48.923622    3372 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="calculator-app:latest"
Apr 17 11:36:48 minikube kubelet[3372]: E0417 11:36:48.923778    3372 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:calculator-app,Image:calculator-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:3001,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{cpu: {{500 -3} {<nil>} 500m DecimalSI},memory: {{536870912 0} {<nil>}  BinarySI},},Requests:ResourceList{cpu: {{200 -3} {<nil>} 200m DecimalSI},memory: {{268435456 0} {<nil>}  BinarySI},},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nrgcd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:15,TimeoutSeconds:1,PeriodSeconds:20,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port:{0 3001 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:5,TimeoutSeconds:1,PeriodSeconds:10,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod calculator-app-7849467997-gtttt_default(ee9866a5-f235-449f-95df-b63c663a9571): ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" logger="UnhandledError"
Apr 17 11:36:48 minikube kubelet[3372]: E0417 11:36:48.925336    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ErrImagePull: \"Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7849467997-gtttt" podUID="ee9866a5-f235-449f-95df-b63c663a9571"
Apr 17 11:36:50 minikube kubelet[3372]: E0417 11:36:50.597677    3372 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"calculator-app\" with ImagePullBackOff: \"Back-off pulling image \\\"calculator-app:latest\\\": ErrImagePull: Error response from daemon: pull access denied for calculator-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/calculator-app-7849467997-v7dq5" podUID="5ca52b84-1025-4495-853d-16abb9a3622b"


==> storage-provisioner [5aaeb76bd9b6] <==
I0417 07:00:27.874553       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0417 07:00:57.877920       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": dial tcp 10.96.0.1:443: i/o timeout


==> storage-provisioner [dd97c837adb6] <==
I0417 07:00:58.562690       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0417 07:00:58.567894       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0417 07:00:58.567925       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0417 07:00:58.571371       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0417 07:00:58.571416       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"8c221575-776b-4656-bd00-20197b6d655e", APIVersion:"v1", ResourceVersion:"382", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_e014b541-bc36-4f2c-875c-702e1f77f305 became leader
I0417 07:00:58.571456       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_e014b541-bc36-4f2c-875c-702e1f77f305!
I0417 07:00:58.672775       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_e014b541-bc36-4f2c-875c-702e1f77f305!

